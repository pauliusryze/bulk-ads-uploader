{"ast":null,"code":"import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames) {\n  let modifiersClassNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const modifierClassNames = Object.entries(modifiers).filter(_ref => {\n    let [, active] = _ref;\n    return active === true;\n  }).reduce((previousValue, _ref2) => {\n    let [key] = _ref2;\n    if (modifiersClassNames[key]) {\n      previousValue.push(modifiersClassNames[key]);\n    } else if (classNames[DayFlag[key]]) {\n      previousValue.push(classNames[DayFlag[key]]);\n    } else if (classNames[SelectionState[key]]) {\n      previousValue.push(classNames[SelectionState[key]]);\n    }\n    return previousValue;\n  }, [classNames[UI.Day]]);\n  return modifierClassNames;\n}","map":{"version":3,"names":["DayFlag","SelectionState","UI","getClassNamesForModifiers","modifiers","classNames","modifiersClassNames","arguments","length","undefined","modifierClassNames","Object","entries","filter","_ref","active","reduce","previousValue","_ref2","key","push","Day"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/getClassNamesForModifiers.ts"],"sourcesContent":["import { DayFlag, SelectionState, UI } from \"../UI.js\";\nimport type { ModifiersClassNames, ClassNames } from \"../types/index.js\";\n\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(\n  modifiers: Record<string, boolean>,\n  classNames: ClassNames,\n  modifiersClassNames: ModifiersClassNames = {}\n): string[] {\n  const modifierClassNames = Object.entries(modifiers)\n    .filter(([, active]) => active === true)\n    .reduce(\n      (previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n          previousValue.push(modifiersClassNames[key as string]);\n        } else if (classNames[DayFlag[key as DayFlag]]) {\n          previousValue.push(classNames[DayFlag[key as DayFlag]]);\n        } else if (classNames[SelectionState[key as SelectionState]]) {\n          previousValue.push(classNames[SelectionState[key as SelectionState]]);\n        }\n        return previousValue;\n      },\n      [classNames[UI.Day]] as string[]\n    );\n\n  return modifierClassNames;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,cAAc,EAAEC,EAAE,QAAQ,UAAU;AAGtD;;;;;;;;;;;;AAYA,OAAM,SAAUC,yBAAyBA,CACvCC,SAAkC,EAClCC,UAAsB,EACuB;EAAA,IAA7CC,mBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA2C,EAAE;EAE7C,MAAMG,kBAAkB,GAAGC,MAAM,CAACC,OAAO,CAACR,SAAS,CAAC,CACjDS,MAAM,CAACC,IAAA;IAAA,IAAC,GAAGC,MAAM,CAAC,GAAAD,IAAA;IAAA,OAAKC,MAAM,KAAK,IAAI;EAAA,EAAC,CACvCC,MAAM,CACL,CAACC,aAAa,EAAAC,KAAA,KAAW;IAAA,IAAT,CAACC,GAAG,CAAC,GAAAD,KAAA;IACnB,IAAIZ,mBAAmB,CAACa,GAAG,CAAC,EAAE;MAC5BF,aAAa,CAACG,IAAI,CAACd,mBAAmB,CAACa,GAAa,CAAC,CAAC;IACxD,CAAC,MAAM,IAAId,UAAU,CAACL,OAAO,CAACmB,GAAc,CAAC,CAAC,EAAE;MAC9CF,aAAa,CAACG,IAAI,CAACf,UAAU,CAACL,OAAO,CAACmB,GAAc,CAAC,CAAC,CAAC;IACzD,CAAC,MAAM,IAAId,UAAU,CAACJ,cAAc,CAACkB,GAAqB,CAAC,CAAC,EAAE;MAC5DF,aAAa,CAACG,IAAI,CAACf,UAAU,CAACJ,cAAc,CAACkB,GAAqB,CAAC,CAAC,CAAC;IACvE;IACA,OAAOF,aAAa;EACtB,CAAC,EACD,CAACZ,UAAU,CAACH,EAAE,CAACmB,GAAG,CAAC,CAAa,CACjC;EAEH,OAAOX,kBAAkB;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}