{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$(),\n  _s1 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiClient } from '../lib/api';\n\n// Auth Hooks\nexport const useAuthStatus = () => {\n  _s();\n  return useQuery({\n    queryKey: ['auth', 'status'],\n    queryFn: () => apiClient.getAuthStatus(),\n    refetchInterval: 30000 // Refetch every 30 seconds\n  });\n};\n_s(useAuthStatus, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useValidateCredentials = () => {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: credentials => apiClient.validateCredentials(credentials),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['auth']\n      });\n    }\n  });\n};\n\n// Image Hooks\n_s2(useValidateCredentials, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useImages = () => {\n  _s3();\n  return useQuery({\n    queryKey: ['images'],\n    queryFn: () => apiClient.getImages()\n  });\n};\n_s3(useImages, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useUploadImages = () => {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: files => apiClient.uploadImages(files),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['images']\n      });\n    }\n  });\n};\n_s4(useUploadImages, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteImage = () => {\n  _s5();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: imageId => apiClient.deleteImage(imageId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['images']\n      });\n    }\n  });\n};\n\n// Template Hooks\n_s5(useDeleteImage, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useTemplates = (page = 1, limit = 10, search) => {\n  _s6();\n  return useQuery({\n    queryKey: ['templates', page, limit, search],\n    queryFn: () => apiClient.getTemplates(page, limit, search)\n  });\n};\n_s6(useTemplates, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useTemplate = templateId => {\n  _s7();\n  return useQuery({\n    queryKey: ['templates', templateId],\n    queryFn: () => apiClient.getTemplate(templateId),\n    enabled: !!templateId\n  });\n};\n_s7(useTemplate, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateTemplate = () => {\n  _s8();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: template => apiClient.createTemplate(template),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['templates']\n      });\n    }\n  });\n};\n_s8(useCreateTemplate, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useUpdateTemplate = () => {\n  _s9();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: ({\n      templateId,\n      updates\n    }) => apiClient.updateTemplate(templateId, updates),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['templates']\n      });\n    }\n  });\n};\n_s9(useUpdateTemplate, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteTemplate = () => {\n  _s0();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: templateId => apiClient.deleteTemplate(templateId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['templates']\n      });\n    }\n  });\n};\n\n// Ad Hooks\n_s0(useDeleteTemplate, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useJobs = () => {\n  _s1();\n  return useQuery({\n    queryKey: ['jobs'],\n    queryFn: () => apiClient.getAllJobs()\n  });\n};\n_s1(useJobs, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useJobStatus = jobId => {\n  _s10();\n  return useQuery({\n    queryKey: ['jobs', jobId],\n    queryFn: () => apiClient.getJobStatus(jobId),\n    enabled: !!jobId,\n    refetchInterval: 2000 // Refetch every 2 seconds for active jobs\n  });\n};\n_s10(useJobStatus, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateBulkAds = () => {\n  _s11();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: request => apiClient.createBulkAds(request),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['jobs']\n      });\n    }\n  });\n};\n_s11(useCreateBulkAds, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteJob = () => {\n  _s12();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: jobId => apiClient.deleteJob(jobId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['jobs']\n      });\n    }\n  });\n};\n_s12(useDeleteJob, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","apiClient","useAuthStatus","_s","queryKey","queryFn","getAuthStatus","refetchInterval","useValidateCredentials","_s2","queryClient","mutationFn","credentials","validateCredentials","onSuccess","invalidateQueries","useImages","_s3","getImages","useUploadImages","_s4","files","uploadImages","useDeleteImage","_s5","imageId","deleteImage","useTemplates","page","limit","search","_s6","getTemplates","useTemplate","templateId","_s7","getTemplate","enabled","useCreateTemplate","_s8","template","createTemplate","useUpdateTemplate","_s9","updates","updateTemplate","useDeleteTemplate","_s0","deleteTemplate","useJobs","_s1","getAllJobs","useJobStatus","jobId","_s10","getJobStatus","useCreateBulkAds","_s11","request","createBulkAds","useDeleteJob","_s12","deleteJob"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/src/hooks/useApi.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiClient, type FacebookCredentials, type CreateTemplateRequest, type UpdateTemplateRequest, type BulkAdRequest } from '../lib/api';\n\n// Auth Hooks\nexport const useAuthStatus = () => {\n  return useQuery({\n    queryKey: ['auth', 'status'],\n    queryFn: () => apiClient.getAuthStatus(),\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n};\n\nexport const useValidateCredentials = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (credentials: FacebookCredentials) => apiClient.validateCredentials(credentials),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['auth'] });\n    },\n  });\n};\n\n// Image Hooks\nexport const useImages = () => {\n  return useQuery({\n    queryKey: ['images'],\n    queryFn: () => apiClient.getImages(),\n  });\n};\n\nexport const useUploadImages = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (files: File[]) => apiClient.uploadImages(files),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['images'] });\n    },\n  });\n};\n\nexport const useDeleteImage = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (imageId: string) => apiClient.deleteImage(imageId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['images'] });\n    },\n  });\n};\n\n// Template Hooks\nexport const useTemplates = (page = 1, limit = 10, search?: string) => {\n  return useQuery({\n    queryKey: ['templates', page, limit, search],\n    queryFn: () => apiClient.getTemplates(page, limit, search),\n  });\n};\n\nexport const useTemplate = (templateId: string) => {\n  return useQuery({\n    queryKey: ['templates', templateId],\n    queryFn: () => apiClient.getTemplate(templateId),\n    enabled: !!templateId,\n  });\n};\n\nexport const useCreateTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (template: CreateTemplateRequest) => apiClient.createTemplate(template),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\nexport const useUpdateTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ templateId, updates }: { templateId: string; updates: UpdateTemplateRequest }) =>\n      apiClient.updateTemplate(templateId, updates),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\nexport const useDeleteTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (templateId: string) => apiClient.deleteTemplate(templateId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\n// Ad Hooks\nexport const useJobs = () => {\n  return useQuery({\n    queryKey: ['jobs'],\n    queryFn: () => apiClient.getAllJobs(),\n  });\n};\n\nexport const useJobStatus = (jobId: string) => {\n  return useQuery({\n    queryKey: ['jobs', jobId],\n    queryFn: () => apiClient.getJobStatus(jobId),\n    enabled: !!jobId,\n    refetchInterval: 2000, // Refetch every 2 seconds for active jobs\n  });\n};\n\nexport const useCreateBulkAds = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (request: BulkAdRequest) => apiClient.createBulkAds(request),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['jobs'] });\n    },\n  });\n};\n\nexport const useDeleteJob = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (jobId: string) => apiClient.deleteJob(jobId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['jobs'] });\n    },\n  });\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}