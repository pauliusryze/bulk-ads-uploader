{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/types/props.ts"],"sourcesContent":["import React from \"react\";\n\nimport type { DeprecatedUI } from \"../UI.js\";\nimport type { Locale, DateLib } from \"../classes/DateLib.js\";\n\nimport type {\n  ClassNames,\n  ModifiersClassNames,\n  Styles,\n  ModifiersStyles,\n  CustomComponents,\n  Matcher,\n  Labels,\n  Formatters,\n  MonthChangeEventHandler,\n  DayEventHandler,\n  Modifiers,\n  DateRange,\n  Mode,\n  Numerals\n} from \"./shared.js\";\n\n/**\n * The props for the `<DayPicker />` component.\n *\n * @group DayPicker\n */\nexport type DayPickerProps = PropsBase &\n  (\n    | PropsSingle\n    | PropsSingleRequired\n    | PropsMulti\n    | PropsMultiRequired\n    | PropsRange\n    | PropsRangeRequired\n    | { mode?: undefined; required?: undefined }\n  );\n\n/**\n * Props for customizing the calendar, handling localization, and managing\n * events. These exclude the selection mode props.\n *\n * @group DayPicker\n * @see https://daypicker.dev/api/interfaces/PropsBase\n */\nexport interface PropsBase {\n  /**\n   * Enable the selection of a single day, multiple days, or a range of days.\n   *\n   * @see https://daypicker.dev/docs/selection-modes\n   */\n  mode?: Mode | undefined;\n  /**\n   * Whether the selection is required.\n   *\n   * @see https://daypicker.dev/docs/selection-modes\n   */\n  required?: boolean | undefined;\n\n  /** Class name to add to the root element. */\n  className?: string;\n  /**\n   * Change the class names used by DayPicker.\n   *\n   * Use this prop when you need to change the default class names — for\n   * example, when importing the style via CSS modules or when using a CSS\n   * framework.\n   *\n   * @see https://daypicker.dev/docs/styling\n   */\n  classNames?: Partial<ClassNames> & Partial<DeprecatedUI<string>>;\n  /**\n   * Change the class name for the day matching the `modifiers`.\n   *\n   * @see https://daypicker.dev/guides/custom-modifiers\n   */\n  modifiersClassNames?: ModifiersClassNames;\n  /** Style to apply to the root element. */\n  style?: React.CSSProperties;\n  /**\n   * Change the inline styles of the HTML elements.\n   *\n   * @see https://daypicker.dev/docs/styling\n   */\n  styles?: Partial<Styles> & Partial<DeprecatedUI<React.CSSProperties>>;\n  /**\n   * Change the class name for the day matching the {@link modifiers}.\n   *\n   * @see https://daypicker.dev/guides/custom-modifiers\n   */\n  modifiersStyles?: ModifiersStyles;\n  /** A unique id to add to the root element. */\n  id?: string;\n  /**\n   * The initial month to show in the calendar.\n   *\n   * Use this prop to let DayPicker control the current month. If you need to\n   * set the month programmatically, use {@link month} and {@link onMonthChange}.\n   *\n   * @defaultValue The current month\n   * @see https://daypicker.dev/docs/navigation\n   */\n  defaultMonth?: Date;\n  /**\n   * The month displayed in the calendar.\n   *\n   * As opposed to `defaultMonth`, use this prop with `onMonthChange` to change\n   * the month programmatically.\n   *\n   * @see https://daypicker.dev/docs/navigation\n   */\n  month?: Date;\n  /**\n   * The number of displayed months.\n   *\n   * @defaultValue 1\n   * @see https://daypicker.dev/docs/customization#multiplemonths\n   */\n  numberOfMonths?: number;\n  /**\n   * The earliest month to start the month navigation.\n   *\n   * @since 9.0.0\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  startMonth?: Date | undefined;\n  /**\n   * @private\n   * @deprecated This prop has been removed. Use `hidden={{ before: date }}`\n   *   instead.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  fromDate?: Date | undefined;\n  /**\n   * @private\n   * @deprecated This prop has been renamed to `startMonth`.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  fromMonth?: Date | undefined;\n  /**\n   * @private\n   * @deprecated Use `startMonth` instead. E.g. `startMonth={new Date(year,\n   *   0)}`.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  fromYear?: number | undefined;\n\n  /**\n   * The latest month to end the month navigation.\n   *\n   * @since 9.0.0\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  endMonth?: Date;\n  /**\n   * @private\n   * @deprecated This prop has been removed. Use `hidden={{ after: date }}`\n   *   instead.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  toDate?: Date;\n  /**\n   * @private\n   * @deprecated This prop has been renamed to `endMonth`.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  toMonth?: Date;\n  /**\n   * @private\n   * @deprecated Use `endMonth` instead. E.g. `endMonth={new Date(year, 0)}`.\n   * @see https://daypicker.dev/docs/navigation#start-and-end-dates\n   */\n  toYear?: number;\n\n  /**\n   * Paginate the month navigation displaying the `numberOfMonths` at a time.\n   *\n   * @see https://daypicker.dev/docs/customization#multiplemonths\n   */\n  pagedNavigation?: boolean;\n  /**\n   * Render the months in reversed order (when {@link numberOfMonths} is set) to\n   * display the most recent month first.\n   *\n   * @see https://daypicker.dev/docs/customization#multiplemonths\n   */\n  reverseMonths?: boolean;\n  /**\n   * Hide the navigation buttons. This prop won't disable the navigation: to\n   * disable the navigation, use {@link disableNavigation}.\n   *\n   * @since 9.0.0\n   * @see https://daypicker.dev/docs/navigation#hidenavigation\n   */\n  hideNavigation?: boolean;\n  /**\n   * Disable the navigation between months. This prop won't hide the navigation:\n   * to hide the navigation, use {@link hideNavigation}.\n   *\n   * @see https://daypicker.dev/docs/navigation#disablenavigation\n   */\n  disableNavigation?: boolean;\n  /**\n   * Show dropdowns to navigate between months or years.\n   *\n   * - `true`: display the dropdowns for both month and year\n   * - `label`: display the month and the year as a label. Change the label with\n   *   the `formatCaption` formatter.\n   * - `month`: display only the dropdown for the months\n   * - `year`: display only the dropdown for the years\n   *\n   * **Note:** By default, showing the dropdown will set the {@link startMonth}\n   * to 100 years ago and {@link endMonth} to the end of the current year. You\n   * can override this behavior by explicitly setting `startMonth` and\n   * `endMonth`.\n   *\n   * @see https://daypicker.dev/docs/customization#caption-layouts\n   */\n  captionLayout?: \"label\" | \"dropdown\" | \"dropdown-months\" | \"dropdown-years\";\n\n  /**\n   * Adjust the positioning of the navigation buttons.\n   *\n   * - `around`: Displays the buttons on either side of the caption.\n   * - `after`: Displays the buttons after the caption. This ensures the tab order\n   *   matches the visual order.\n   *\n   * If not set, the buttons default to being displayed after the caption, but\n   * the tab order may not align with the visual order.\n   *\n   * @since 9.7.0\n   * @see https://daypicker.dev/docs/customization#navigation-layouts\n   */\n  navLayout?: \"around\" | \"after\" | undefined;\n  /**\n   * Display always 6 weeks per each month, regardless of the month’s number of\n   * weeks. Weeks will be filled with the days from the next month.\n   *\n   * @see https://daypicker.dev/docs/customization#fixed-weeks\n   */\n  fixedWeeks?: boolean;\n  /**\n   * Hide the row displaying the weekday row header.\n   *\n   * @since 9.0.0\n   */\n  hideWeekdays?: boolean;\n  /**\n   * Show the outside days (days falling in the next or the previous month).\n   *\n   * **Note:** when a {@link broadcastCalendar} is set, this prop defaults to\n   * true.\n   *\n   * @see https://daypicker.dev/docs/customization#outside-days\n   */\n  showOutsideDays?: boolean;\n  /**\n   * Show the week numbers column. Weeks are numbered according to the local\n   * week index.\n   *\n   * @see https://daypicker.dev/docs/customization#showweeknumber\n   */\n  showWeekNumber?: boolean;\n  /**\n   * Animate navigating between months.\n   *\n   * @since 9.6.0\n   * @see https://daypicker.dev/docs/navigation#animate\n   */\n  animate?: boolean;\n  /**\n   * Display the weeks in the month following the broadcast calendar. Setting\n   * this prop will ignore {@link weekStartsOn} (always Monday) and\n   * {@link showOutsideDays} will default to true.\n   *\n   * @since 9.4.0\n   * @see https://daypicker.dev/docs/localization#broadcast-calendar\n   * @see https://en.wikipedia.org/wiki/Broadcast_calendar\n   */\n  broadcastCalendar?: boolean;\n  /**\n   * Use ISO week dates instead of the locale setting. Setting this prop will\n   * ignore `weekStartsOn` and `firstWeekContainsDate`.\n   *\n   * @see https://daypicker.dev/docs/localization#iso-week-dates\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   */\n  ISOWeek?: boolean;\n  /**\n   * The time zone (IANA or UTC offset) to use in the calendar (experimental).\n   *\n   * See\n   * [Wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n   * for the possible values.\n   *\n   * @since 9.1.1\n   * @see https://daypicker.dev/docs/time-zone\n   */\n  timeZone?: string | undefined;\n  /**\n   * Change the components used for rendering the calendar elements.\n   *\n   * @see https://daypicker.dev/guides/custom-components\n   */\n  components?: Partial<CustomComponents>;\n  /**\n   * Add a footer to the calendar, acting as a live region.\n   *\n   * Use this prop to communicate the calendar's status to screen readers.\n   * Prefer strings over complex UI elements.\n   *\n   * @see https://daypicker.dev/guides/accessibility#footer\n   */\n  footer?: React.ReactNode | string;\n  /**\n   * When a selection mode is set, DayPicker will focus the first selected day\n   * (if set) or today's date (if not disabled).\n   *\n   * Use this prop when you need to focus DayPicker after a user action, for\n   * improved accessibility.\n   *\n   * @see https://daypicker.dev/guides/accessibility#autofocus\n   */\n  autoFocus?: boolean;\n  /**\n   * @private\n   * @deprecated This prop will be removed. Use {@link autoFocus} instead.\n   */\n  initialFocus?: boolean;\n  /**\n   * Apply the `disabled` modifier to the matching days. Disabled days cannot be\n   * selected when in a selection mode is set.\n   *\n   * @see https://daypicker.dev/docs/selection-modes#disabled\n   */\n  disabled?: Matcher | Matcher[] | undefined;\n  /**\n   * Apply the `hidden` modifier to the matching days. Will hide them from the\n   * calendar.\n   *\n   * @see https://daypicker.dev/guides/custom-modifiers#hidden-modifier\n   */\n  hidden?: Matcher | Matcher[] | undefined;\n  /**\n   * The today’s date. Default is the current date. This date will get the\n   * `today` modifier to style the day.\n   *\n   * @see https://daypicker.dev/guides/custom-modifiers#today-modifier\n   */\n  today?: Date;\n  /**\n   * Add modifiers to the matching days.\n   *\n   * @example\n   *   const modifiers = {\n   *   weekend: { dayOfWeek: [0, 6] }, // Match weekends\n   *   holiday: [new Date(2023, 11, 25)] // Match Christmas\n   *   };\n   *   <DayPicker modifiers={modifiers} />\n   *\n   * @see https://daypicker.dev/guides/custom-modifiers\n   */\n  modifiers?: Record<string, Matcher | Matcher[] | undefined> | undefined;\n  /**\n   * Labels creators to override the defaults. Use this prop to customize the\n   * aria-label attributes in DayPicker.\n   *\n   * @see https://daypicker.dev/docs/translation#aria-labels\n   */\n  labels?: Partial<Labels>;\n  /**\n   * Formatters used to format dates to strings. Use this prop to override the\n   * default functions.\n   *\n   * @see https://daypicker.dev/docs/translation#custom-formatters\n   */\n  formatters?: Partial<Formatters>;\n  /**\n   * The text direction of the calendar. Use `ltr` for left-to-right (default)\n   * or `rtl` for right-to-left.\n   *\n   * @see https://daypicker.dev/docs/translation#rtl-text-direction\n   */\n  dir?: HTMLDivElement[\"dir\"];\n  /**\n   * The aria-label attribute to add to the container element.\n   *\n   * @since 9.4.1\n   * @see https://daypicker.dev/guides/accessibility\n   */\n  [\"aria-label\"]?: string;\n  /**\n   * The role attribute to add to the container element.\n   *\n   * @since 9.4.1\n   * @see https://daypicker.dev/guides/accessibility\n   */\n  role?: \"application\" | \"dialog\" | undefined;\n  /**\n   * A cryptographic nonce (\"number used once\") which can be used by Content\n   * Security Policy for the inline `style` attributes.\n   */\n  nonce?: HTMLDivElement[\"nonce\"];\n  /** Add a `title` attribute to the container element. */\n  title?: HTMLDivElement[\"title\"];\n  /** Add the language tag to the container element. */\n  lang?: HTMLDivElement[\"lang\"];\n  /**\n   * The locale object used to localize dates. Pass a locale from\n   * `react-day-picker/locale` to localize the calendar.\n   *\n   * @example\n   *   import { es } from \"react-day-picker/locale\";\n   *   <DayPicker locale={es} />\n   *\n   * @defaultValue enUS - The English locale default of `date-fns`.\n   * @see https://daypicker.dev/docs/localization\n   * @see https://github.com/date-fns/date-fns/tree/main/src/locale for a list of the supported locales\n   */\n  locale?: Partial<Locale> | undefined;\n  /**\n   * The numeral system to use when formatting dates.\n   *\n   * - `latn`: Latin (Western Arabic)\n   * - `arab`: Arabic-Indic\n   * - `arabext`: Eastern Arabic-Indic (Persian)\n   * - `deva`: Devanagari\n   * - `beng`: Bengali\n   * - `guru`: Gurmukhi\n   * - `gujr`: Gujarati\n   * - `orya`: Oriya\n   * - `tamldec`: Tamil\n   * - `telu`: Telugu\n   * - `knda`: Kannada\n   * - `mlym`: Malayalam\n   *\n   * @defaultValue `latn` Latin (Western Arabic)\n   * @see https://daypicker.dev/docs/translation#numeral-systems\n   */\n  numerals?: Numerals | undefined;\n  /**\n   * The index of the first day of the week (0 - Sunday). Overrides the locale's\n   * default.\n   *\n   * @see https://daypicker.dev/docs/localization#first-date-of-the-week\n   */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined;\n  /**\n   * The day of January that is always in the first week of the year.\n   *\n   * @see https://daypicker.dev/docs/localization#first-week-contains-date\n   */\n  firstWeekContainsDate?: 1 | 4;\n  /**\n   * Enable `DD` and `DDDD` for week year tokens when formatting or parsing\n   * dates.\n   *\n   * @see https://date-fns.org/docs/Unicode-Tokens\n   */\n  useAdditionalWeekYearTokens?: boolean | undefined;\n  /**\n   * Enable `YY` and `YYYY` for day of year tokens when formatting or parsing\n   * dates.\n   *\n   * @see https://date-fns.org/docs/Unicode-Tokens\n   */\n  useAdditionalDayOfYearTokens?: boolean | undefined;\n\n  /**\n   * Event fired when the user navigates between months.\n   *\n   * @see https://daypicker.dev/docs/navigation#onmonthchange\n   */\n  onMonthChange?: MonthChangeEventHandler;\n\n  /**\n   * Event handler when the next month button is clicked.\n   *\n   * @see https://daypicker.dev/docs/navigation\n   */\n  onNextClick?: MonthChangeEventHandler;\n  /**\n   * Event handler when the previous month button is clicked.\n   *\n   * @see https://daypicker.dev/docs/navigation\n   */\n  onPrevClick?: MonthChangeEventHandler;\n  /**\n   * Event handler when a week number is clicked.\n   *\n   * @private\n   * @deprecated Use a custom `WeekNumber` component instead.\n   * @see https://daypicker.dev/docs/customization#showweeknumber\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onWeekNumberClick?: any;\n\n  /** Event handler when a day is clicked. */\n  onDayClick?: DayEventHandler<React.MouseEvent>;\n  /** Event handler when a day is focused. */\n  onDayFocus?: DayEventHandler<React.FocusEvent>;\n  /** Event handler when a day is blurred. */\n  onDayBlur?: DayEventHandler<React.FocusEvent>;\n  /** Event handler when a key is pressed on a day. */\n  onDayKeyDown?: DayEventHandler<React.KeyboardEvent>;\n  /** Event handler when the mouse enters a day. */\n  onDayMouseEnter?: DayEventHandler<React.MouseEvent>;\n  /** Event handler when the mouse leaves a day. */\n  onDayMouseLeave?: DayEventHandler<React.MouseEvent>;\n\n  /**\n   * Replace the default date library with a custom one. Experimental: not\n   * guaranteed to be stable (may not respect semver).\n   *\n   * @since 9.0.0\n   * @experimental\n   */\n  dateLib?: Partial<typeof DateLib.prototype> | undefined;\n\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayKeyUp?: DayEventHandler<React.KeyboardEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayKeyPress?: DayEventHandler<React.KeyboardEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayPointerEnter?: DayEventHandler<React.PointerEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayPointerLeave?: DayEventHandler<React.PointerEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayTouchCancel?: DayEventHandler<React.TouchEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayTouchEnd?: DayEventHandler<React.TouchEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayTouchMove?: DayEventHandler<React.TouchEvent>;\n  /**\n   * @private\n   * @deprecated Use a custom `DayButton` component instead.\n   */\n  onDayTouchStart?: DayEventHandler<React.TouchEvent>;\n}\n\n/**\n * Shared handler type for `onSelect` callback when a selection mode is set.\n *\n * @example\n *   const handleSelect: OnSelectHandler<Date> = (\n *     selected,\n *     triggerDate,\n *     modifiers,\n *     e\n *   ) => {\n *     console.log(\"Selected:\", selected);\n *     console.log(\"Triggered by:\", triggerDate);\n *   };\n *\n * @template T - The type of the selected item.\n * @callback OnSelectHandler\n * @param {T} selected - The selected item after the event.\n * @param {Date} triggerDate - The date when the event was triggered. This is\n *   typically the day clicked or interacted with.\n * @param {Modifiers} modifiers - The modifiers associated with the event.\n * @param {React.MouseEvent | React.KeyboardEvent} e - The event object.\n */\nexport type OnSelectHandler<T> = (\n  selected: T,\n  triggerDate: Date,\n  modifiers: Modifiers,\n  e: React.MouseEvent | React.KeyboardEvent\n) => void;\n\n/**\n * The props when the single selection is required.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#single-mode\n */\nexport interface PropsSingleRequired {\n  mode: \"single\";\n  required: true;\n  /** The selected date. */\n  selected: Date | undefined;\n  /** Event handler when a day is selected. */\n  onSelect?: OnSelectHandler<Date>;\n}\n\n/**\n * The props when the single selection is optional.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#single-mode\n */\nexport interface PropsSingle {\n  mode: \"single\";\n  required?: false | undefined;\n  /** The selected date. */\n  selected?: Date | undefined;\n  /** Event handler when a day is selected. */\n  onSelect?: OnSelectHandler<Date | undefined>;\n}\n\n/**\n * The props when the multiple selection is required.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#multiple-mode\n */\nexport interface PropsMultiRequired {\n  mode: \"multiple\";\n  required: true;\n  /** The selected dates. */\n  selected: Date[] | undefined;\n  /** Event handler when days are selected. */\n  onSelect?: OnSelectHandler<Date[]>;\n  /** The minimum number of selectable days. */\n  min?: number;\n  /** The maximum number of selectable days. */\n  max?: number;\n}\n\n/**\n * The props when the multiple selection is optional.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#multiple-mode\n */\nexport interface PropsMulti {\n  mode: \"multiple\";\n  required?: false | undefined;\n  /** The selected dates. */\n  selected?: Date[] | undefined;\n  /** Event handler when days are selected. */\n  onSelect?: OnSelectHandler<Date[] | undefined>;\n  /** The minimum number of selectable days. */\n  min?: number;\n  /** The maximum number of selectable days. */\n  max?: number;\n}\n/**\n * The props when the range selection is required.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#range-mode\n */\nexport interface PropsRangeRequired {\n  mode: \"range\";\n  required: true;\n  /**\n   * Apply the `disabled` modifier to the matching days. Disabled days cannot be\n   * selected when in a selection mode is set.\n   *\n   * @see https://daypicker.dev/docs/selection-modes#disabled\n   */\n  disabled?: Matcher | Matcher[] | undefined;\n  /**\n   * When `true`, the range will reset when including a disabled day.\n   *\n   * @since V9.0.2\n   */\n  excludeDisabled?: boolean | undefined;\n  /** The selected range. */\n  selected: DateRange | undefined;\n  /** Event handler when a range is selected. */\n  onSelect?: OnSelectHandler<DateRange>;\n  /** The minimum number of days to include in the range. */\n  min?: number;\n  /** The maximum number of days to include in the range. */\n  max?: number;\n}\n/**\n * The props when the range selection is optional.\n *\n * @group DayPicker\n * @see https://daypicker.dev/docs/selection-modes#range-mode\n */\nexport interface PropsRange {\n  mode: \"range\";\n  required?: false | undefined;\n  /**\n   * Apply the `disabled` modifier to the matching days. Disabled days cannot be\n   * selected when in a selection mode is set.\n   *\n   * @see https://daypicker.dev/docs/selection-modes#disabled\n   */\n  disabled?: Matcher | Matcher[] | undefined;\n  /**\n   * When `true`, the range will reset when including a disabled day.\n   *\n   * @since V9.0.2\n   * @see https://daypicker.dev/docs/selection-modes#exclude-disabled\n   */\n  excludeDisabled?: boolean | undefined;\n  /** The selected range. */\n  selected?: DateRange | undefined;\n  /** Event handler when the selection changes. */\n  onSelect?: OnSelectHandler<DateRange | undefined>;\n  /** The minimum number of days to include in the range. */\n  min?: number;\n  /** The maximum number of days to include in the range. */\n  max?: number;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}