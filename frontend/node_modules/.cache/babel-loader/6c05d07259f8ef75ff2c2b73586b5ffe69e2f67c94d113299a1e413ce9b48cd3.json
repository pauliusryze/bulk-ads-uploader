{"ast":null,"code":"import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n  const modifierClassNames = Object.entries(modifiers).filter(([, active]) => active === true).reduce((previousValue, [key]) => {\n    if (modifiersClassNames[key]) {\n      previousValue.push(modifiersClassNames[key]);\n    } else if (classNames[DayFlag[key]]) {\n      previousValue.push(classNames[DayFlag[key]]);\n    } else if (classNames[SelectionState[key]]) {\n      previousValue.push(classNames[SelectionState[key]]);\n    }\n    return previousValue;\n  }, [classNames[UI.Day]]);\n  return modifierClassNames;\n}","map":{"version":3,"names":["DayFlag","SelectionState","UI","getClassNamesForModifiers","modifiers","classNames","modifiersClassNames","modifierClassNames","Object","entries","filter","active","reduce","previousValue","key","push","Day"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/getClassNamesForModifiers.ts"],"sourcesContent":["import { DayFlag, SelectionState, UI } from \"../UI.js\";\nimport type { ModifiersClassNames, ClassNames } from \"../types/index.js\";\n\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(\n  modifiers: Record<string, boolean>,\n  classNames: ClassNames,\n  modifiersClassNames: ModifiersClassNames = {}\n): string[] {\n  const modifierClassNames = Object.entries(modifiers)\n    .filter(([, active]) => active === true)\n    .reduce(\n      (previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n          previousValue.push(modifiersClassNames[key as string]);\n        } else if (classNames[DayFlag[key as DayFlag]]) {\n          previousValue.push(classNames[DayFlag[key as DayFlag]]);\n        } else if (classNames[SelectionState[key as SelectionState]]) {\n          previousValue.push(classNames[SelectionState[key as SelectionState]]);\n        }\n        return previousValue;\n      },\n      [classNames[UI.Day]] as string[]\n    );\n\n  return modifierClassNames;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,cAAc,EAAEC,EAAE,QAAQ,UAAU;AAGtD;;;;;;;;;;;;AAYA,OAAM,SAAUC,yBAAyBA,CACvCC,SAAkC,EAClCC,UAAsB,EACtBC,mBAAA,GAA2C,EAAE;EAE7C,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,OAAO,CAACL,SAAS,CAAC,CACjDM,MAAM,CAAC,CAAC,GAAGC,MAAM,CAAC,KAAKA,MAAM,KAAK,IAAI,CAAC,CACvCC,MAAM,CACL,CAACC,aAAa,EAAE,CAACC,GAAG,CAAC,KAAI;IACvB,IAAIR,mBAAmB,CAACQ,GAAG,CAAC,EAAE;MAC5BD,aAAa,CAACE,IAAI,CAACT,mBAAmB,CAACQ,GAAa,CAAC,CAAC;IACxD,CAAC,MAAM,IAAIT,UAAU,CAACL,OAAO,CAACc,GAAc,CAAC,CAAC,EAAE;MAC9CD,aAAa,CAACE,IAAI,CAACV,UAAU,CAACL,OAAO,CAACc,GAAc,CAAC,CAAC,CAAC;IACzD,CAAC,MAAM,IAAIT,UAAU,CAACJ,cAAc,CAACa,GAAqB,CAAC,CAAC,EAAE;MAC5DD,aAAa,CAACE,IAAI,CAACV,UAAU,CAACJ,cAAc,CAACa,GAAqB,CAAC,CAAC,CAAC;IACvE;IACA,OAAOD,aAAa;EACtB,CAAC,EACD,CAACR,UAAU,CAACH,EAAE,CAACc,GAAG,CAAC,CAAa,CACjC;EAEH,OAAOT,kBAAkB;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}