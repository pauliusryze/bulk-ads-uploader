{"ast":null,"code":"import{useMutation,useQuery,useQueryClient}from'@tanstack/react-query';import{apiClient}from'../lib/api';// Auth Hooks\nexport const useAuthStatus=()=>{return useQuery({queryKey:['auth','status'],queryFn:()=>apiClient.getAuthStatus(),refetchInterval:30000// Refetch every 30 seconds\n});};export const useValidateCredentials=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:credentials=>apiClient.validateCredentials(credentials),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['auth']});}});};// Media Hooks (Images and Videos)\nexport const useMedia=()=>{return useQuery({queryKey:['media'],queryFn:()=>apiClient.getMedia()});};export const useUploadMedia=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:files=>apiClient.uploadMedia(files),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['media']});}});};export const useDeleteMedia=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:mediaId=>apiClient.deleteMedia(mediaId),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['media']});}});};// Template Hooks\nexport const useTemplates=function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let search=arguments.length>2?arguments[2]:undefined;return useQuery({queryKey:['templates',page,limit,search],queryFn:()=>apiClient.getTemplates(page,limit,search)});};export const useTemplate=templateId=>{return useQuery({queryKey:['templates',templateId],queryFn:()=>apiClient.getTemplate(templateId),enabled:!!templateId});};export const useCreateTemplate=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:template=>apiClient.createTemplate(template),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['templates']});}});};export const useUpdateTemplate=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:_ref=>{let{templateId,updates}=_ref;return apiClient.updateTemplate(templateId,updates);},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['templates']});}});};export const useDeleteTemplate=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:templateId=>apiClient.deleteTemplate(templateId),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['templates']});}});};// Ad Hooks\nexport const useJobs=()=>{return useQuery({queryKey:['jobs'],queryFn:()=>apiClient.getAllJobs()});};export const useJobStatus=jobId=>{return useQuery({queryKey:['jobs',jobId],queryFn:()=>apiClient.getJobStatus(jobId),enabled:!!jobId,refetchInterval:2000// Refetch every 2 seconds for active jobs\n});};export const useCreateBulkAds=()=>{return useMutation({mutationFn:request=>apiClient.createBulkAds(request)});};export const useCreateEnhancedBulkAds=()=>{return useMutation({mutationFn:request=>apiClient.createEnhancedBulkAds(request)});};export const useDeleteJob=()=>{const queryClient=useQueryClient();return useMutation({mutationFn:jobId=>apiClient.deleteJob(jobId),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['jobs']});}});};","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","apiClient","useAuthStatus","queryKey","queryFn","getAuthStatus","refetchInterval","useValidateCredentials","queryClient","mutationFn","credentials","validateCredentials","onSuccess","invalidateQueries","useMedia","getMedia","useUploadMedia","files","uploadMedia","useDeleteMedia","mediaId","deleteMedia","useTemplates","page","arguments","length","undefined","limit","search","getTemplates","useTemplate","templateId","getTemplate","enabled","useCreateTemplate","template","createTemplate","useUpdateTemplate","_ref","updates","updateTemplate","useDeleteTemplate","deleteTemplate","useJobs","getAllJobs","useJobStatus","jobId","getJobStatus","useCreateBulkAds","request","createBulkAds","useCreateEnhancedBulkAds","createEnhancedBulkAds","useDeleteJob","deleteJob"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/src/hooks/useApi.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiClient, type FacebookCredentials, type CreateTemplateRequest, type UpdateTemplateRequest, type BulkAdRequest, type EnhancedBulkAdRequest } from '../lib/api';\n\n// Auth Hooks\nexport const useAuthStatus = () => {\n  return useQuery({\n    queryKey: ['auth', 'status'],\n    queryFn: () => apiClient.getAuthStatus(),\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n};\n\nexport const useValidateCredentials = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (credentials: FacebookCredentials) => apiClient.validateCredentials(credentials),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['auth'] });\n    },\n  });\n};\n\n// Media Hooks (Images and Videos)\nexport const useMedia = () => {\n  return useQuery({\n    queryKey: ['media'],\n    queryFn: () => apiClient.getMedia(),\n  });\n};\n\nexport const useUploadMedia = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (files: File[]) => apiClient.uploadMedia(files),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['media'] });\n    },\n  });\n};\n\nexport const useDeleteMedia = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (mediaId: string) => apiClient.deleteMedia(mediaId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['media'] });\n    },\n  });\n};\n\n// Template Hooks\nexport const useTemplates = (page = 1, limit = 10, search?: string) => {\n  return useQuery({\n    queryKey: ['templates', page, limit, search],\n    queryFn: () => apiClient.getTemplates(page, limit, search),\n  });\n};\n\nexport const useTemplate = (templateId: string) => {\n  return useQuery({\n    queryKey: ['templates', templateId],\n    queryFn: () => apiClient.getTemplate(templateId),\n    enabled: !!templateId,\n  });\n};\n\nexport const useCreateTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (template: CreateTemplateRequest) => apiClient.createTemplate(template),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\nexport const useUpdateTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ templateId, updates }: { templateId: string; updates: UpdateTemplateRequest }) =>\n      apiClient.updateTemplate(templateId, updates),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\nexport const useDeleteTemplate = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (templateId: string) => apiClient.deleteTemplate(templateId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['templates'] });\n    },\n  });\n};\n\n// Ad Hooks\nexport const useJobs = () => {\n  return useQuery({\n    queryKey: ['jobs'],\n    queryFn: () => apiClient.getAllJobs(),\n  });\n};\n\nexport const useJobStatus = (jobId: string) => {\n  return useQuery({\n    queryKey: ['jobs', jobId],\n    queryFn: () => apiClient.getJobStatus(jobId),\n    enabled: !!jobId,\n    refetchInterval: 2000, // Refetch every 2 seconds for active jobs\n  });\n};\n\nexport const useCreateBulkAds = () => {\n  return useMutation({\n    mutationFn: (request: BulkAdRequest) => apiClient.createBulkAds(request),\n  });\n};\n\nexport const useCreateEnhancedBulkAds = () => {\n  return useMutation({\n    mutationFn: (request: EnhancedBulkAdRequest) => apiClient.createEnhancedBulkAds(request),\n  });\n};\n\nexport const useDeleteJob = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (jobId: string) => apiClient.deleteJob(jobId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['jobs'] });\n    },\n  });\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}