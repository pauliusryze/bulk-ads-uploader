{"ast":null,"code":"import React from \"react\";\nimport { UI } from \"../UI.js\";\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(props) {\n  const {\n    options,\n    className,\n    components,\n    classNames,\n    ...selectProps\n  } = props;\n  const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n  const selectedOption = options?.find(_ref => {\n    let {\n      value\n    } = _ref;\n    return value === selectProps.value;\n  });\n  return React.createElement(\"span\", {\n    \"data-disabled\": selectProps.disabled,\n    className: classNames[UI.DropdownRoot]\n  }, React.createElement(components.Select, {\n    className: cssClassSelect,\n    ...selectProps\n  }, options?.map(_ref2 => {\n    let {\n      value,\n      label,\n      disabled\n    } = _ref2;\n    return React.createElement(components.Option, {\n      key: value,\n      value: value,\n      disabled: disabled\n    }, label);\n  })), React.createElement(\"span\", {\n    className: classNames[UI.CaptionLabel],\n    \"aria-hidden\": true\n  }, selectedOption?.label, React.createElement(components.Chevron, {\n    orientation: \"down\",\n    size: 18,\n    className: classNames[UI.Chevron]\n  })));\n}","map":{"version":3,"names":["React","UI","Dropdown","props","options","className","components","classNames","selectProps","cssClassSelect","join","selectedOption","find","_ref","value","createElement","disabled","DropdownRoot","Select","map","_ref2","label","Option","key","CaptionLabel","Chevron","orientation","size"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/components/Dropdown.tsx"],"sourcesContent":["import React, { type SelectHTMLAttributes } from \"react\";\n\nimport { UI } from \"../UI.js\";\nimport type { ClassNames, CustomComponents } from \"../types/index.js\";\n\n/** An option to use in the dropdown. Maps to the `<option>` HTML element. */\nexport type DropdownOption = {\n  /** The value of the option. */\n  value: number;\n  /** The label of the option. */\n  label: string;\n  /** Whether the dropdown option is disabled (e.g., out of the calendar range). */\n  disabled: boolean;\n};\n\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(\n  props: {\n    /**\n     * @deprecated Use {@link useDayPicker} hook to get the list of internal\n     *   components.\n     */\n    components: CustomComponents;\n    /**\n     * @deprecated Use {@link useDayPicker} hook to get the list of internal\n     *   class names.\n     */\n    classNames: ClassNames;\n    /** The options to display in the dropdown. */\n    options?: DropdownOption[] | undefined;\n  } & Omit<SelectHTMLAttributes<HTMLSelectElement>, \"children\">\n) {\n  const { options, className, components, classNames, ...selectProps } = props;\n\n  const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n\n  const selectedOption = options?.find(\n    ({ value }) => value === selectProps.value\n  );\n  return (\n    <span\n      data-disabled={selectProps.disabled}\n      className={classNames[UI.DropdownRoot]}\n    >\n      <components.Select className={cssClassSelect} {...selectProps}>\n        {options?.map(({ value, label, disabled }) => (\n          <components.Option key={value} value={value} disabled={disabled}>\n            {label}\n          </components.Option>\n        ))}\n      </components.Select>\n      <span className={classNames[UI.CaptionLabel]} aria-hidden>\n        {selectedOption?.label}\n        <components.Chevron\n          orientation=\"down\"\n          size={18}\n          className={classNames[UI.Chevron]}\n        />\n      </span>\n    </span>\n  );\n}\n\nexport type DropdownProps = Parameters<typeof Dropdown>[0];\n"],"mappings":"AAAA,OAAOA,KAAoC,MAAM,OAAO;AAExD,SAASC,EAAE,QAAQ,UAAU;AAa7B;;;;;;AAMA,OAAM,SAAUC,QAAQA,CACtBC,KAa6D;EAE7D,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,UAAU;IAAEC,UAAU;IAAE,GAAGC;EAAW,CAAE,GAAGL,KAAK;EAE5E,MAAMM,cAAc,GAAG,CAACF,UAAU,CAACN,EAAE,CAACC,QAAQ,CAAC,EAAEG,SAAS,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;EAErE,MAAMC,cAAc,GAAGP,OAAO,EAAEQ,IAAI,CAClCC,IAAA;IAAA,IAAC;MAAEC;IAAK,CAAE,GAAAD,IAAA;IAAA,OAAKC,KAAK,KAAKN,WAAW,CAACM,KAAK;EAAA,EAC3C;EACD,OACEd,KAAA,CAAAe,aAAA;IAAA,iBACiBP,WAAW,CAACQ,QAAQ;IACnCX,SAAS,EAAEE,UAAU,CAACN,EAAE,CAACgB,YAAY;EAAC,GAEtCjB,KAAA,CAAAe,aAAA,CAACT,UAAU,CAACY,MAAM;IAACb,SAAS,EAAEI,cAAc;IAAA,GAAMD;EAAW,GAC1DJ,OAAO,EAAEe,GAAG,CAACC,KAAA;IAAA,IAAC;MAAEN,KAAK;MAAEO,KAAK;MAAEL;IAAQ,CAAE,GAAAI,KAAA;IAAA,OACvCpB,KAAA,CAAAe,aAAA,CAACT,UAAU,CAACgB,MAAM;MAACC,GAAG,EAAET,KAAK;MAAEA,KAAK,EAAEA,KAAK;MAAEE,QAAQ,EAAEA;IAAQ,GAC5DK,KAAK,CACY;EAAA,CACrB,CAAC,CACgB,EACpBrB,KAAA,CAAAe,aAAA;IAAMV,SAAS,EAAEE,UAAU,CAACN,EAAE,CAACuB,YAAY,CAAC;IAAA;EAAA,GACzCb,cAAc,EAAEU,KAAK,EACtBrB,KAAA,CAAAe,aAAA,CAACT,UAAU,CAACmB,OAAO;IACjBC,WAAW,EAAC,MAAM;IAClBC,IAAI,EAAE,EAAE;IACRtB,SAAS,EAAEE,UAAU,CAACN,EAAE,CAACwB,OAAO;EAAC,EACjC,CACG,CACF;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}