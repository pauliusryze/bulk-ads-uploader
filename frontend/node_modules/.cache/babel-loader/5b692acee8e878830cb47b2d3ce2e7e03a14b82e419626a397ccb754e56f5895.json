{"ast":null,"code":"export class FacebookAdService {\n  constructor(apiClient) {\n    this.apiClient = void 0;\n    this.isDevelopmentMode = void 0;\n    this.apiClient = apiClient;\n    this.isDevelopmentMode = process.env.NODE_ENV === 'development' && typeof window !== 'undefined' && window.location.protocol === 'http:';\n  }\n\n  // Map template to Facebook campaign data\n  mapTemplateToCampaign(template) {\n    return {\n      name: template.name,\n      objective: 'LINK_CLICKS',\n      // Default objective, can be made configurable\n      status: 'PAUSED' // Always create in paused status for safety\n    };\n  }\n\n  // Map template to Facebook ad set data\n  mapTemplateToAdSet(template, campaignId, adSetName, budget) {\n    return {\n      name: adSetName,\n      campaign_id: campaignId,\n      daily_budget: budget * 100,\n      // Convert to cents\n      billing_event: 'IMPRESSIONS',\n      optimization_goal: 'LINK_CLICKS',\n      targeting: {\n        age_min: template.targeting.ageMin,\n        age_max: template.targeting.ageMax,\n        geo_locations: {\n          countries: template.targeting.locations.inclusion || []\n        }\n      },\n      status: 'PAUSED' // Always create in paused status for safety\n    };\n  }\n\n  // Map template and ad item to Facebook creative data\n  mapTemplateToCreative(template, adItem, pageId) {\n    const linkData = {\n      message: template.adCopy.primaryText,\n      link: 'https://your-website.com',\n      // This should be configurable\n      call_to_action: {\n        type: template.adCopy.callToAction || 'LEARN_MORE',\n        value: {\n          link: 'https://your-website.com'\n        }\n      }\n    };\n    return {\n      name: `${adItem.adName} Creative`,\n      object_story_spec: {\n        page_id: pageId,\n        link_data: linkData\n      }\n    };\n  }\n\n  // Map ad item to Facebook ad data\n  mapAdItemToAd(adItem, adSetId, creativeId) {\n    return {\n      name: adItem.adName,\n      adset_id: adSetId,\n      creative: {\n        creative_id: creativeId\n      },\n      status: 'PAUSED' // Always create in paused status for safety\n    };\n  }\n\n  // Upload media to Facebook\n  async uploadMediaToFacebook(adAccountId, file) {\n    if (this.isDevelopmentMode) {\n      console.log('Development mode: Mock media upload for', file.name);\n      return `mock_media_hash_${Date.now()}`;\n    }\n    const result = await this.apiClient.uploadMedia(adAccountId, file);\n    return result.hash; // Return the media hash for use in creatives\n  }\n\n  // Generate ad preview\n  async generateAdPreview(adAccountId, creativeSpec, adFormat = 'DESKTOP_FEED_STANDARD') {\n    const result = await this.apiClient.generateAdPreview(adAccountId, creativeSpec, adFormat);\n    return result.body; // Return the preview HTML\n  }\n\n  // Create bulk ads with preview\n  async createBulkAdsWithPreview(template, adItems, adAccountId, pageId, budget, onProgress) {\n    const result = {\n      campaignId: '',\n      adSetIds: [],\n      creativeIds: [],\n      adIds: [],\n      errors: [],\n      previewUrls: []\n    };\n    try {\n      onProgress === null || onProgress === void 0 ? void 0 : onProgress(10, 'Creating campaign...');\n\n      // 1. Create campaign\n      const campaignData = this.mapTemplateToCampaign(template);\n      const campaignResult = await this.apiClient.createCampaign(adAccountId, campaignData);\n      result.campaignId = campaignResult.id;\n      onProgress === null || onProgress === void 0 ? void 0 : onProgress(20, 'Campaign created successfully');\n\n      // 2. Create ad sets and ads for each ad item\n      const totalSteps = adItems.length * 3; // ad set + creative + ad for each item\n      let completedSteps = 0;\n      for (let i = 0; i < adItems.length; i++) {\n        const adItem = adItems[i];\n        try {\n          onProgress === null || onProgress === void 0 ? void 0 : onProgress(20 + completedSteps / totalSteps * 60, `Creating ad ${i + 1}/${adItems.length}...`);\n\n          // Create ad set\n          const adSetData = this.mapTemplateToAdSet(template, result.campaignId, adItem.adSetName, budget);\n          const adSetResult = await this.apiClient.createAdSet(adAccountId, adSetData);\n          result.adSetIds.push(adSetResult.id);\n          completedSteps++;\n          onProgress === null || onProgress === void 0 ? void 0 : onProgress(20 + completedSteps / totalSteps * 60, `Creating creative for ad ${i + 1}...`);\n\n          // Create creative\n          const creativeData = this.mapTemplateToCreative(template, adItem, pageId);\n          const creativeResult = await this.apiClient.createAdCreative(adAccountId, creativeData);\n          result.creativeIds.push(creativeResult.id);\n          completedSteps++;\n          onProgress === null || onProgress === void 0 ? void 0 : onProgress(20 + completedSteps / totalSteps * 60, `Creating ad ${i + 1}...`);\n\n          // Create ad\n          const adData = this.mapAdItemToAd(adItem, adSetResult.id, creativeResult.id);\n          const adResult = await this.apiClient.createAd(adAccountId, adData);\n          result.adIds.push(adResult.id);\n          completedSteps++;\n          onProgress === null || onProgress === void 0 ? void 0 : onProgress(20 + completedSteps / totalSteps * 60, `Generating preview for ad ${i + 1}...`);\n\n          // Generate preview\n          const previewUrl = await this.generateAdPreview(adAccountId, creativeData, 'DESKTOP_FEED_STANDARD');\n          result.previewUrls.push(previewUrl);\n        } catch (error) {\n          const errorMessage = `Failed to create ad ${i + 1}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          result.errors.push(errorMessage);\n          console.error(errorMessage, error);\n        }\n      }\n      onProgress === null || onProgress === void 0 ? void 0 : onProgress(90, 'Finalizing...');\n\n      // 3. Validate results\n      if (result.adIds.length === 0) {\n        throw new Error('No ads were created successfully');\n      }\n      onProgress === null || onProgress === void 0 ? void 0 : onProgress(100, 'Bulk ad creation completed!');\n    } catch (error) {\n      const errorMessage = `Failed to create campaign: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      result.errors.push(errorMessage);\n      console.error(errorMessage, error);\n    }\n    return result;\n  }\n\n  // Get ad previews for existing ads\n  async getAdPreviews(adIds) {\n    const previews = [];\n    for (const adId of adIds) {\n      try {\n        const result = await this.apiClient.getAdPreview(adId);\n        if (result.data && result.data.length > 0) {\n          previews.push({\n            adId,\n            previewUrl: result.data[0].body,\n            adFormat: 'DESKTOP_FEED_STANDARD'\n          });\n        }\n      } catch (error) {\n        console.error(`Failed to get preview for ad ${adId}:`, error);\n      }\n    }\n    return previews;\n  }\n\n  // Activate ads (change status from PAUSED to ACTIVE)\n  async activateAds(adIds) {\n    for (const adId of adIds) {\n      try {\n        await this.apiClient.updateAdStatus(adId, 'ACTIVE');\n      } catch (error) {\n        console.error(`Failed to activate ad ${adId}:`, error);\n      }\n    }\n  }\n\n  // Delete ads (for cleanup)\n  async deleteAds(adIds) {\n    for (const adId of adIds) {\n      try {\n        await this.apiClient.deleteAd(adId);\n      } catch (error) {\n        console.error(`Failed to delete ad ${adId}:`, error);\n      }\n    }\n  }\n}","map":{"version":3,"names":["FacebookAdService","constructor","apiClient","isDevelopmentMode","process","env","NODE_ENV","window","location","protocol","mapTemplateToCampaign","template","name","objective","status","mapTemplateToAdSet","campaignId","adSetName","budget","campaign_id","daily_budget","billing_event","optimization_goal","targeting","age_min","ageMin","age_max","ageMax","geo_locations","countries","locations","inclusion","mapTemplateToCreative","adItem","pageId","linkData","message","adCopy","primaryText","link","call_to_action","type","callToAction","value","adName","object_story_spec","page_id","link_data","mapAdItemToAd","adSetId","creativeId","adset_id","creative","creative_id","uploadMediaToFacebook","adAccountId","file","console","log","Date","now","result","uploadMedia","hash","generateAdPreview","creativeSpec","adFormat","body","createBulkAdsWithPreview","adItems","onProgress","adSetIds","creativeIds","adIds","errors","previewUrls","campaignData","campaignResult","createCampaign","id","totalSteps","length","completedSteps","i","adSetData","adSetResult","createAdSet","push","creativeData","creativeResult","createAdCreative","adData","adResult","createAd","previewUrl","error","errorMessage","Error","getAdPreviews","previews","adId","getAdPreview","data","activateAds","updateAdStatus","deleteAds","deleteAd"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/src/services/facebook-ad-service.ts"],"sourcesContent":["import FacebookAPIClient, {\n  FacebookCampaignData,\n  FacebookAdSetData,\n  FacebookCreativeData,\n  FacebookAdData,\n} from '../lib/facebook-api';\nimport { EnhancedAdTemplate, BulkAdItem } from '../types';\n\nexport interface BulkAdCreationResult {\n  campaignId: string;\n  adSetIds: string[];\n  creativeIds: string[];\n  adIds: string[];\n  errors: string[];\n  previewUrls: string[];\n}\n\nexport interface AdPreviewData {\n  adId: string;\n  previewUrl: string;\n  adFormat: string;\n}\n\nexport class FacebookAdService {\n  private apiClient: FacebookAPIClient;\n  private isDevelopmentMode: boolean;\n\n  constructor(apiClient: FacebookAPIClient) {\n    this.apiClient = apiClient;\n    this.isDevelopmentMode = process.env.NODE_ENV === 'development' && \n      (typeof window !== 'undefined' && window.location.protocol === 'http:');\n  }\n\n  // Map template to Facebook campaign data\n  private mapTemplateToCampaign(template: EnhancedAdTemplate): FacebookCampaignData {\n    return {\n      name: template.name,\n      objective: 'LINK_CLICKS', // Default objective, can be made configurable\n      status: 'PAUSED', // Always create in paused status for safety\n    };\n  }\n\n  // Map template to Facebook ad set data\n  private mapTemplateToAdSet(\n    template: EnhancedAdTemplate,\n    campaignId: string,\n    adSetName: string,\n    budget: number\n  ): FacebookAdSetData {\n    return {\n      name: adSetName,\n      campaign_id: campaignId,\n      daily_budget: budget * 100, // Convert to cents\n      billing_event: 'IMPRESSIONS',\n      optimization_goal: 'LINK_CLICKS',\n      targeting: {\n        age_min: template.targeting.ageMin,\n        age_max: template.targeting.ageMax,\n        geo_locations: {\n          countries: template.targeting.locations.inclusion || [],\n        },\n      },\n      status: 'PAUSED', // Always create in paused status for safety\n    };\n  }\n\n  // Map template and ad item to Facebook creative data\n  private mapTemplateToCreative(\n    template: EnhancedAdTemplate,\n    adItem: BulkAdItem,\n    pageId: string\n  ): FacebookCreativeData {\n    const linkData = {\n      message: template.adCopy.primaryText,\n      link: 'https://your-website.com', // This should be configurable\n      call_to_action: {\n        type: template.adCopy.callToAction || 'LEARN_MORE',\n        value: {\n          link: 'https://your-website.com',\n        },\n      },\n    };\n\n    return {\n      name: `${adItem.adName} Creative`,\n      object_story_spec: {\n        page_id: pageId,\n        link_data: linkData,\n      },\n    };\n  }\n\n  // Map ad item to Facebook ad data\n  private mapAdItemToAd(\n    adItem: BulkAdItem,\n    adSetId: string,\n    creativeId: string\n  ): FacebookAdData {\n    return {\n      name: adItem.adName,\n      adset_id: adSetId,\n      creative: {\n        creative_id: creativeId,\n      },\n      status: 'PAUSED', // Always create in paused status for safety\n    };\n  }\n\n  // Upload media to Facebook\n  async uploadMediaToFacebook(adAccountId: string, file: File): Promise<string> {\n    if (this.isDevelopmentMode) {\n      console.log('Development mode: Mock media upload for', file.name);\n      return `mock_media_hash_${Date.now()}`;\n    }\n    \n    const result = await this.apiClient.uploadMedia(adAccountId, file);\n    return result.hash; // Return the media hash for use in creatives\n  }\n\n  // Generate ad preview\n  async generateAdPreview(\n    adAccountId: string,\n    creativeSpec: any,\n    adFormat: string = 'DESKTOP_FEED_STANDARD'\n  ): Promise<string> {\n    const result = await this.apiClient.generateAdPreview(adAccountId, creativeSpec, adFormat);\n    return result.body; // Return the preview HTML\n  }\n\n  // Create bulk ads with preview\n  async createBulkAdsWithPreview(\n    template: EnhancedAdTemplate,\n    adItems: BulkAdItem[],\n    adAccountId: string,\n    pageId: string,\n    budget: number,\n    onProgress?: (progress: number, message: string) => void\n  ): Promise<BulkAdCreationResult> {\n    const result: BulkAdCreationResult = {\n      campaignId: '',\n      adSetIds: [],\n      creativeIds: [],\n      adIds: [],\n      errors: [],\n      previewUrls: [],\n    };\n\n    try {\n      onProgress?.(10, 'Creating campaign...');\n      \n      // 1. Create campaign\n      const campaignData = this.mapTemplateToCampaign(template);\n      const campaignResult = await this.apiClient.createCampaign(adAccountId, campaignData);\n      result.campaignId = campaignResult.id;\n\n      onProgress?.(20, 'Campaign created successfully');\n\n      // 2. Create ad sets and ads for each ad item\n      const totalSteps = adItems.length * 3; // ad set + creative + ad for each item\n      let completedSteps = 0;\n\n      for (let i = 0; i < adItems.length; i++) {\n        const adItem = adItems[i];\n        \n        try {\n          onProgress?.(20 + (completedSteps / totalSteps) * 60, `Creating ad ${i + 1}/${adItems.length}...`);\n          \n          // Create ad set\n          const adSetData = this.mapTemplateToAdSet(\n            template,\n            result.campaignId,\n            adItem.adSetName,\n            budget\n          );\n          const adSetResult = await this.apiClient.createAdSet(adAccountId, adSetData);\n          result.adSetIds.push(adSetResult.id);\n          completedSteps++;\n\n          onProgress?.(20 + (completedSteps / totalSteps) * 60, `Creating creative for ad ${i + 1}...`);\n          \n          // Create creative\n          const creativeData = this.mapTemplateToCreative(template, adItem, pageId);\n          const creativeResult = await this.apiClient.createAdCreative(adAccountId, creativeData);\n          result.creativeIds.push(creativeResult.id);\n          completedSteps++;\n\n          onProgress?.(20 + (completedSteps / totalSteps) * 60, `Creating ad ${i + 1}...`);\n          \n          // Create ad\n          const adData = this.mapAdItemToAd(adItem, adSetResult.id, creativeResult.id);\n          const adResult = await this.apiClient.createAd(adAccountId, adData);\n          result.adIds.push(adResult.id);\n          completedSteps++;\n\n          onProgress?.(20 + (completedSteps / totalSteps) * 60, `Generating preview for ad ${i + 1}...`);\n          \n          // Generate preview\n          const previewUrl = await this.generateAdPreview(adAccountId, creativeData, 'DESKTOP_FEED_STANDARD');\n          result.previewUrls.push(previewUrl);\n\n        } catch (error) {\n          const errorMessage = `Failed to create ad ${i + 1}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          result.errors.push(errorMessage);\n          console.error(errorMessage, error);\n        }\n      }\n\n      onProgress?.(90, 'Finalizing...');\n\n      // 3. Validate results\n      if (result.adIds.length === 0) {\n        throw new Error('No ads were created successfully');\n      }\n\n      onProgress?.(100, 'Bulk ad creation completed!');\n\n    } catch (error) {\n      const errorMessage = `Failed to create campaign: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      result.errors.push(errorMessage);\n      console.error(errorMessage, error);\n    }\n\n    return result;\n  }\n\n  // Get ad previews for existing ads\n  async getAdPreviews(adIds: string[]): Promise<AdPreviewData[]> {\n    const previews: AdPreviewData[] = [];\n\n    for (const adId of adIds) {\n      try {\n        const result = await this.apiClient.getAdPreview(adId);\n        if (result.data && result.data.length > 0) {\n          previews.push({\n            adId,\n            previewUrl: result.data[0].body,\n            adFormat: 'DESKTOP_FEED_STANDARD',\n          });\n        }\n      } catch (error) {\n        console.error(`Failed to get preview for ad ${adId}:`, error);\n      }\n    }\n\n    return previews;\n  }\n\n  // Activate ads (change status from PAUSED to ACTIVE)\n  async activateAds(adIds: string[]): Promise<void> {\n    for (const adId of adIds) {\n      try {\n        await this.apiClient.updateAdStatus(adId, 'ACTIVE');\n      } catch (error) {\n        console.error(`Failed to activate ad ${adId}:`, error);\n      }\n    }\n  }\n\n  // Delete ads (for cleanup)\n  async deleteAds(adIds: string[]): Promise<void> {\n    for (const adId of adIds) {\n      try {\n        await this.apiClient.deleteAd(adId);\n      } catch (error) {\n        console.error(`Failed to delete ad ${adId}:`, error);\n      }\n    }\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}