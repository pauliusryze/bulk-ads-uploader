{"ast":null,"code":"const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3001';// API Response Types\n// Facebook Auth Types\n// Image Types\n// Template Types\n// Ad Types\n// API Client Class\nclass ApiClient{constructor(baseUrl){this.baseUrl=void 0;this.baseUrl=baseUrl;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=`${this.baseUrl}${endpoint}`;const config={headers:{'Content-Type':'application/json',...options.headers},...options};try{const response=await fetch(url,config);const data=await response.json();if(!response.ok){throw new Error(data.message||`HTTP ${response.status}`);}return data;}catch(error){console.error('API request failed:',error);throw error;}}// Health Check\nasync healthCheck(){const response=await this.request('/health');return response.data;}// Auth Endpoints\nasync validateCredentials(credentials){const response=await this.request('/api/auth/validate',{method:'POST',body:JSON.stringify(credentials)});return response.data;}async getAuthStatus(){const response=await this.request('/api/auth/status');return response.data;}// Image Endpoints\nasync uploadImages(files){const formData=new FormData();files.forEach(file=>{formData.append('images',file);});const response=await this.request('/api/images/upload',{method:'POST',body:formData,headers:{}// Let browser set Content-Type for FormData\n});return response.data;}async getImages(){const response=await this.request('/api/images');return response.data;}async deleteImage(imageId){await this.request(`/api/images/${imageId}`,{method:'DELETE'});}// Template Endpoints\nasync createTemplate(template){const response=await this.request('/api/templates',{method:'POST',body:JSON.stringify(template)});return response.data;}async getTemplates(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let search=arguments.length>2?arguments[2]:undefined;const params=new URLSearchParams({page:page.toString(),limit:limit.toString()});if(search){params.append('search',search);}const response=await this.request(`/api/templates?${params}`);return response.data;}async getTemplate(templateId){const response=await this.request(`/api/templates/${templateId}`);return response.data;}async updateTemplate(templateId,updates){const response=await this.request(`/api/templates/${templateId}`,{method:'PUT',body:JSON.stringify(updates)});return response.data;}async deleteTemplate(templateId){await this.request(`/api/templates/${templateId}`,{method:'DELETE'});}// Ad Endpoints\nasync createBulkAds(request){const response=await this.request('/api/ads/bulk',{method:'POST',body:JSON.stringify(request)});return response.data;}async getJobStatus(jobId){const response=await this.request(`/api/ads/jobs/${jobId}`);return response.data;}async getAllJobs(){const response=await this.request('/api/ads/jobs');return response.data;}async deleteJob(jobId){await this.request(`/api/ads/jobs/${jobId}`,{method:'DELETE'});}}// Export singleton instance\nexport const apiClient=new ApiClient(API_BASE_URL);","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiClient","constructor","baseUrl","request","endpoint","options","arguments","length","undefined","url","config","headers","response","fetch","data","json","ok","Error","message","status","error","console","healthCheck","validateCredentials","credentials","method","body","JSON","stringify","getAuthStatus","uploadImages","files","formData","FormData","forEach","file","append","getImages","deleteImage","imageId","createTemplate","template","getTemplates","page","limit","search","params","URLSearchParams","toString","getTemplate","templateId","updateTemplate","updates","deleteTemplate","createBulkAds","getJobStatus","jobId","getAllJobs","deleteJob","apiClient"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/src/lib/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// API Response Types\ninterface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n  timestamp: string;\n}\n\n// Facebook Auth Types\nexport interface FacebookCredentials {\n  appId: string;\n  appSecret: string;\n  accessToken: string;\n  adAccountId: string;\n}\n\nexport interface FacebookAdAccount {\n  id: string;\n  name: string;\n  currency: string;\n  timezone: string;\n}\n\nexport interface AuthStatus {\n  isInitialized: boolean;\n  hasAccessToken: boolean;\n  hasAdAccountId: boolean;\n}\n\n// Image Types\nexport interface UploadedImage {\n  id: string;\n  filename: string;\n  originalName: string;\n  url: string;\n  size: number;\n  mimeType: string;\n  dimensions: {\n    width: number;\n    height: number;\n  };\n  uploadedAt: string;\n}\n\nexport interface UploadResponse {\n  uploadedImages: UploadedImage[];\n  totalUploaded: number;\n  failedUploads: string[];\n}\n\n// Template Types\nexport interface AdCopy {\n  headline: string;\n  primaryText: string;\n  callToAction?: 'SHOP_NOW' | 'LEARN_MORE' | 'SIGN_UP' | 'BOOK_NOW' | 'CONTACT_US';\n  description?: string;\n}\n\nexport interface Targeting {\n  ageMin?: number;\n  ageMax?: number;\n  genders?: ('all' | 'men' | 'women')[];\n  locations?: string[];\n  interests?: string[];\n  customAudiences?: string[];\n}\n\nexport interface Budget {\n  amount: number;\n  currency: 'USD' | 'EUR' | 'GBP' | 'CAD';\n  type: 'DAILY' | 'LIFETIME';\n}\n\nexport interface Placement {\n  facebook: boolean;\n  instagram: boolean;\n  audienceNetwork: boolean;\n}\n\nexport interface AdTemplate {\n  id: string;\n  name: string;\n  description: string;\n  adCopy: AdCopy;\n  targeting: Targeting;\n  budget: Budget;\n  placement: Placement;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreateTemplateRequest {\n  name: string;\n  description?: string;\n  adCopy: AdCopy;\n  targeting: Targeting;\n  budget: Budget;\n  placement: Placement;\n}\n\nexport interface UpdateTemplateRequest {\n  name?: string;\n  description?: string;\n  adCopy?: AdCopy;\n  targeting?: Targeting;\n  budget?: Budget;\n  placement?: Placement;\n}\n\nexport interface PaginationInfo {\n  page: number;\n  limit: number;\n  total: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrev: boolean;\n}\n\nexport interface TemplateListResponse {\n  templates: AdTemplate[];\n  pagination: PaginationInfo;\n}\n\n// Ad Types\nexport interface BulkAdRequest {\n  templateId: string;\n  images: string[];\n  campaignName: string;\n  adSetName: string;\n  options: {\n    createCampaign: boolean;\n    createAdSet: boolean;\n    status: 'ACTIVE' | 'PAUSED';\n  };\n}\n\nexport interface AdCreationJob {\n  id: string;\n  status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\n  progress: number;\n  totalAds: number;\n  createdAds: number;\n  failedAds: number;\n  results: {\n    campaignId?: string;\n    adSetId?: string;\n    adIds: string[];\n    errors: string[];\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdCreationResponse {\n  jobId: string;\n  status: string;\n  message: string;\n}\n\n// API Client Class\nclass ApiClient {\n  private baseUrl: string;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${this.baseUrl}${endpoint}`;\n    const config: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || `HTTP ${response.status}`);\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Health Check\n  async healthCheck(): Promise<{ status: string; timestamp: string; uptime: number }> {\n    const response = await this.request<{ status: string; timestamp: string; uptime: number }>('/health');\n    return response.data!;\n  }\n\n  // Auth Endpoints\n  async validateCredentials(credentials: FacebookCredentials): Promise<{\n    isValid: boolean;\n    adAccount?: FacebookAdAccount;\n    permissions?: string[];\n  }> {\n    const response = await this.request<{\n      isValid: boolean;\n      adAccount?: FacebookAdAccount;\n      permissions?: string[];\n    }>('/api/auth/validate', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n    });\n    return response.data!;\n  }\n\n  async getAuthStatus(): Promise<AuthStatus> {\n    const response = await this.request<AuthStatus>('/api/auth/status');\n    return response.data!;\n  }\n\n  // Image Endpoints\n  async uploadImages(files: File[]): Promise<UploadResponse> {\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('images', file);\n    });\n\n    const response = await this.request<UploadResponse>('/api/images/upload', {\n      method: 'POST',\n      body: formData,\n      headers: {}, // Let browser set Content-Type for FormData\n    });\n    return response.data!;\n  }\n\n  async getImages(): Promise<{ images: UploadedImage[]; total: number }> {\n    const response = await this.request<{ images: UploadedImage[]; total: number }>('/api/images');\n    return response.data!;\n  }\n\n  async deleteImage(imageId: string): Promise<void> {\n    await this.request(`/api/images/${imageId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Template Endpoints\n  async createTemplate(template: CreateTemplateRequest): Promise<AdTemplate> {\n    const response = await this.request<AdTemplate>('/api/templates', {\n      method: 'POST',\n      body: JSON.stringify(template),\n    });\n    return response.data!;\n  }\n\n  async getTemplates(page = 1, limit = 10, search?: string): Promise<TemplateListResponse> {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString(),\n    });\n    if (search) {\n      params.append('search', search);\n    }\n\n    const response = await this.request<TemplateListResponse>(`/api/templates?${params}`);\n    return response.data!;\n  }\n\n  async getTemplate(templateId: string): Promise<AdTemplate> {\n    const response = await this.request<AdTemplate>(`/api/templates/${templateId}`);\n    return response.data!;\n  }\n\n  async updateTemplate(templateId: string, updates: UpdateTemplateRequest): Promise<AdTemplate> {\n    const response = await this.request<AdTemplate>(`/api/templates/${templateId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n    return response.data!;\n  }\n\n  async deleteTemplate(templateId: string): Promise<void> {\n    await this.request(`/api/templates/${templateId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Ad Endpoints\n  async createBulkAds(request: BulkAdRequest): Promise<AdCreationResponse> {\n    const response = await this.request<AdCreationResponse>('/api/ads/bulk', {\n      method: 'POST',\n      body: JSON.stringify(request),\n    });\n    return response.data!;\n  }\n\n  async getJobStatus(jobId: string): Promise<AdCreationJob> {\n    const response = await this.request<AdCreationJob>(`/api/ads/jobs/${jobId}`);\n    return response.data!;\n  }\n\n  async getAllJobs(): Promise<{ jobs: AdCreationJob[]; total: number }> {\n    const response = await this.request<{ jobs: AdCreationJob[]; total: number }>('/api/ads/jobs');\n    return response.data!;\n  }\n\n  async deleteJob(jobId: string): Promise<void> {\n    await this.request(`/api/ads/jobs/${jobId}`, {\n      method: 'DELETE',\n    });\n  }\n}\n\n// Export singleton instance\nexport const apiClient = new ApiClient(API_BASE_URL); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}