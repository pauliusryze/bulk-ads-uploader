{"ast":null,"code":"import { DayFlag } from \"../UI.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */\nexport function createGetModifiers(days, props, navStart, navEnd, dateLib) {\n  const {\n    disabled,\n    hidden,\n    modifiers,\n    showOutsideDays,\n    broadcastCalendar,\n    today\n  } = props;\n  const {\n    isSameDay,\n    isSameMonth,\n    startOfMonth,\n    isBefore,\n    endOfMonth,\n    isAfter\n  } = dateLib;\n  const computedNavStart = navStart && startOfMonth(navStart);\n  const computedNavEnd = navEnd && endOfMonth(navEnd);\n  const internalModifiersMap = {\n    [DayFlag.focused]: [],\n    [DayFlag.outside]: [],\n    [DayFlag.disabled]: [],\n    [DayFlag.hidden]: [],\n    [DayFlag.today]: []\n  };\n  const customModifiersMap = {};\n  for (const day of days) {\n    const {\n      date,\n      displayMonth\n    } = day;\n    const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n    const isBeforeNavStart = Boolean(computedNavStart && isBefore(date, computedNavStart));\n    const isAfterNavEnd = Boolean(computedNavEnd && isAfter(date, computedNavEnd));\n    const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n    const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) || isBeforeNavStart || isAfterNavEnd ||\n    // Broadcast calendar will show outside days as default\n    !broadcastCalendar && !showOutsideDays && isOutside || broadcastCalendar && showOutsideDays === false && isOutside;\n    const isToday = isSameDay(date, today ?? dateLib.today());\n    if (isOutside) internalModifiersMap.outside.push(day);\n    if (isDisabled) internalModifiersMap.disabled.push(day);\n    if (isHidden) internalModifiersMap.hidden.push(day);\n    if (isToday) internalModifiersMap.today.push(day);\n    // Add custom modifiers\n    if (modifiers) {\n      Object.keys(modifiers).forEach(name => {\n        const modifierValue = modifiers?.[name];\n        const isMatch = modifierValue ? dateMatchModifiers(date, modifierValue, dateLib) : false;\n        if (!isMatch) return;\n        if (customModifiersMap[name]) {\n          customModifiersMap[name].push(day);\n        } else {\n          customModifiersMap[name] = [day];\n        }\n      });\n    }\n  }\n  return day => {\n    // Initialize all the modifiers to false\n    const dayFlags = {\n      [DayFlag.focused]: false,\n      [DayFlag.disabled]: false,\n      [DayFlag.hidden]: false,\n      [DayFlag.outside]: false,\n      [DayFlag.today]: false\n    };\n    const customModifiers = {};\n    // Find the modifiers for the given day\n    for (const name in internalModifiersMap) {\n      const days = internalModifiersMap[name];\n      dayFlags[name] = days.some(d => d === day);\n    }\n    for (const name in customModifiersMap) {\n      customModifiers[name] = customModifiersMap[name].some(d => d === day);\n    }\n    return {\n      ...dayFlags,\n      // custom modifiers should override all the previous ones\n      ...customModifiers\n    };\n  };\n}","map":{"version":3,"names":["DayFlag","dateMatchModifiers","createGetModifiers","days","props","navStart","navEnd","dateLib","disabled","hidden","modifiers","showOutsideDays","broadcastCalendar","today","isSameDay","isSameMonth","startOfMonth","isBefore","endOfMonth","isAfter","computedNavStart","computedNavEnd","internalModifiersMap","focused","outside","customModifiersMap","day","date","displayMonth","isOutside","Boolean","isBeforeNavStart","isAfterNavEnd","isDisabled","isHidden","isToday","push","Object","keys","forEach","name","modifierValue","isMatch","dayFlags","customModifiers","some","d"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/createGetModifiers.ts"],"sourcesContent":["import { DayFlag } from \"../UI.js\";\nimport type { CalendarDay, DateLib } from \"../classes/index.js\";\nimport type { DayPickerProps, Modifiers } from \"../types/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */\nexport function createGetModifiers(\n  days: CalendarDay[],\n  props: DayPickerProps,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  dateLib: DateLib\n) {\n  const {\n    disabled,\n    hidden,\n    modifiers,\n    showOutsideDays,\n    broadcastCalendar,\n    today\n  } = props;\n\n  const {\n    isSameDay,\n    isSameMonth,\n    startOfMonth,\n    isBefore,\n    endOfMonth,\n    isAfter\n  } = dateLib;\n\n  const computedNavStart = navStart && startOfMonth(navStart);\n  const computedNavEnd = navEnd && endOfMonth(navEnd);\n\n  const internalModifiersMap: Record<DayFlag, CalendarDay[]> = {\n    [DayFlag.focused]: [],\n    [DayFlag.outside]: [],\n    [DayFlag.disabled]: [],\n    [DayFlag.hidden]: [],\n    [DayFlag.today]: []\n  };\n\n  const customModifiersMap: Record<string, CalendarDay[]> = {};\n\n  for (const day of days) {\n    const { date, displayMonth } = day;\n\n    const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n\n    const isBeforeNavStart = Boolean(\n      computedNavStart && isBefore(date, computedNavStart)\n    );\n\n    const isAfterNavEnd = Boolean(\n      computedNavEnd && isAfter(date, computedNavEnd)\n    );\n\n    const isDisabled = Boolean(\n      disabled && dateMatchModifiers(date, disabled, dateLib)\n    );\n\n    const isHidden =\n      Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n      isBeforeNavStart ||\n      isAfterNavEnd ||\n      // Broadcast calendar will show outside days as default\n      (!broadcastCalendar && !showOutsideDays && isOutside) ||\n      (broadcastCalendar && showOutsideDays === false && isOutside);\n\n    const isToday = isSameDay(date, today ?? dateLib.today());\n\n    if (isOutside) internalModifiersMap.outside.push(day);\n    if (isDisabled) internalModifiersMap.disabled.push(day);\n    if (isHidden) internalModifiersMap.hidden.push(day);\n    if (isToday) internalModifiersMap.today.push(day);\n\n    // Add custom modifiers\n    if (modifiers) {\n      Object.keys(modifiers).forEach((name) => {\n        const modifierValue = modifiers?.[name];\n        const isMatch = modifierValue\n          ? dateMatchModifiers(date, modifierValue, dateLib)\n          : false;\n        if (!isMatch) return;\n        if (customModifiersMap[name]) {\n          customModifiersMap[name].push(day);\n        } else {\n          customModifiersMap[name] = [day];\n        }\n      });\n    }\n  }\n\n  return (day: CalendarDay): Modifiers => {\n    // Initialize all the modifiers to false\n    const dayFlags: Record<DayFlag, boolean> = {\n      [DayFlag.focused]: false,\n      [DayFlag.disabled]: false,\n      [DayFlag.hidden]: false,\n      [DayFlag.outside]: false,\n      [DayFlag.today]: false\n    };\n    const customModifiers: Modifiers = {};\n\n    // Find the modifiers for the given day\n    for (const name in internalModifiersMap) {\n      const days = internalModifiersMap[name as DayFlag];\n      dayFlags[name as DayFlag] = days.some((d) => d === day);\n    }\n    for (const name in customModifiersMap) {\n      customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n    }\n\n    return {\n      ...dayFlags,\n      // custom modifiers should override all the previous ones\n      ...customModifiers\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}