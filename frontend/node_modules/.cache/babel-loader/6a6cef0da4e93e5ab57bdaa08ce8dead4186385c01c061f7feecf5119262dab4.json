{"ast":null,"code":"import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType } from \"./typeguards.js\";\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */\nexport function dateMatchModifiers(date, matchers) {\n  let dateLib = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDateLib;\n  const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n  const {\n    isSameDay,\n    differenceInCalendarDays,\n    isAfter\n  } = dateLib;\n  return matchersArr.some(matcher => {\n    if (typeof matcher === \"boolean\") {\n      return matcher;\n    }\n    if (dateLib.isDate(matcher)) {\n      return isSameDay(date, matcher);\n    }\n    if (isDatesArray(matcher, dateLib)) {\n      return matcher.includes(date);\n    }\n    if (isDateRange(matcher)) {\n      return rangeIncludesDate(matcher, date, false, dateLib);\n    }\n    if (isDayOfWeekType(matcher)) {\n      if (!Array.isArray(matcher.dayOfWeek)) {\n        return matcher.dayOfWeek === date.getDay();\n      }\n      return matcher.dayOfWeek.includes(date.getDay());\n    }\n    if (isDateInterval(matcher)) {\n      const diffBefore = differenceInCalendarDays(matcher.before, date);\n      const diffAfter = differenceInCalendarDays(matcher.after, date);\n      const isDayBefore = diffBefore > 0;\n      const isDayAfter = diffAfter < 0;\n      const isClosedInterval = isAfter(matcher.before, matcher.after);\n      if (isClosedInterval) {\n        return isDayAfter && isDayBefore;\n      } else {\n        return isDayBefore || isDayAfter;\n      }\n    }\n    if (isDateAfterType(matcher)) {\n      return differenceInCalendarDays(date, matcher.after) > 0;\n    }\n    if (isDateBeforeType(matcher)) {\n      return differenceInCalendarDays(matcher.before, date) > 0;\n    }\n    if (typeof matcher === \"function\") {\n      return matcher(date);\n    }\n    return false;\n  });\n}\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;","map":{"version":3,"names":["defaultDateLib","rangeIncludesDate","isDateAfterType","isDateBeforeType","isDateInterval","isDateRange","isDatesArray","isDayOfWeekType","dateMatchModifiers","date","matchers","dateLib","arguments","length","undefined","matchersArr","Array","isArray","isSameDay","differenceInCalendarDays","isAfter","some","matcher","isDate","includes","dayOfWeek","getDay","diffBefore","before","diffAfter","after","isDayBefore","isDayAfter","isClosedInterval","isMatch"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/utils/dateMatchModifiers.ts"],"sourcesContent":["import { type DateLib, defaultDateLib } from \"../classes/DateLib.js\";\nimport type { Matcher } from \"../types/index.js\";\n\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport {\n  isDateAfterType,\n  isDateBeforeType,\n  isDateInterval,\n  isDateRange,\n  isDatesArray,\n  isDayOfWeekType\n} from \"./typeguards.js\";\n\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */\nexport function dateMatchModifiers(\n  date: Date,\n  matchers: Matcher | Matcher[],\n  dateLib: DateLib = defaultDateLib\n): boolean {\n  const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n  const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n  return matchersArr.some((matcher: Matcher) => {\n    if (typeof matcher === \"boolean\") {\n      return matcher;\n    }\n    if (dateLib.isDate(matcher)) {\n      return isSameDay(date, matcher);\n    }\n    if (isDatesArray(matcher, dateLib)) {\n      return matcher.includes(date);\n    }\n    if (isDateRange(matcher)) {\n      return rangeIncludesDate(matcher, date, false, dateLib);\n    }\n    if (isDayOfWeekType(matcher)) {\n      if (!Array.isArray(matcher.dayOfWeek)) {\n        return matcher.dayOfWeek === date.getDay();\n      }\n      return matcher.dayOfWeek.includes(date.getDay());\n    }\n    if (isDateInterval(matcher)) {\n      const diffBefore = differenceInCalendarDays(matcher.before, date);\n      const diffAfter = differenceInCalendarDays(matcher.after, date);\n      const isDayBefore = diffBefore > 0;\n      const isDayAfter = diffAfter < 0;\n      const isClosedInterval = isAfter(matcher.before, matcher.after);\n      if (isClosedInterval) {\n        return isDayAfter && isDayBefore;\n      } else {\n        return isDayBefore || isDayAfter;\n      }\n    }\n    if (isDateAfterType(matcher)) {\n      return differenceInCalendarDays(date, matcher.after) > 0;\n    }\n    if (isDateBeforeType(matcher)) {\n      return differenceInCalendarDays(matcher.before, date) > 0;\n    }\n    if (typeof matcher === \"function\") {\n      return matcher(date);\n    }\n    return false;\n  });\n}\n\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;\n"],"mappings":"AAAA,SAAuBA,cAAc,QAAQ,uBAAuB;AAGpE,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SACEC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,eAAe,QACV,iBAAiB;AAExB;;;;;;;;;AASA,OAAM,SAAUC,kBAAkBA,CAChCC,IAAU,EACVC,QAA6B,EACI;EAAA,IAAjCC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmBZ,cAAc;EAEjC,MAAMe,WAAW,GAAG,CAACC,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,GAAG,CAACA,QAAQ,CAAC,GAAGA,QAAQ;EACpE,MAAM;IAAEQ,SAAS;IAAEC,wBAAwB;IAAEC;EAAO,CAAE,GAAGT,OAAO;EAChE,OAAOI,WAAW,CAACM,IAAI,CAAEC,OAAgB,IAAI;IAC3C,IAAI,OAAOA,OAAO,KAAK,SAAS,EAAE;MAChC,OAAOA,OAAO;IAChB;IACA,IAAIX,OAAO,CAACY,MAAM,CAACD,OAAO,CAAC,EAAE;MAC3B,OAAOJ,SAAS,CAACT,IAAI,EAAEa,OAAO,CAAC;IACjC;IACA,IAAIhB,YAAY,CAACgB,OAAO,EAAEX,OAAO,CAAC,EAAE;MAClC,OAAOW,OAAO,CAACE,QAAQ,CAACf,IAAI,CAAC;IAC/B;IACA,IAAIJ,WAAW,CAACiB,OAAO,CAAC,EAAE;MACxB,OAAOrB,iBAAiB,CAACqB,OAAO,EAAEb,IAAI,EAAE,KAAK,EAAEE,OAAO,CAAC;IACzD;IACA,IAAIJ,eAAe,CAACe,OAAO,CAAC,EAAE;MAC5B,IAAI,CAACN,KAAK,CAACC,OAAO,CAACK,OAAO,CAACG,SAAS,CAAC,EAAE;QACrC,OAAOH,OAAO,CAACG,SAAS,KAAKhB,IAAI,CAACiB,MAAM,EAAE;MAC5C;MACA,OAAOJ,OAAO,CAACG,SAAS,CAACD,QAAQ,CAACf,IAAI,CAACiB,MAAM,EAAE,CAAC;IAClD;IACA,IAAItB,cAAc,CAACkB,OAAO,CAAC,EAAE;MAC3B,MAAMK,UAAU,GAAGR,wBAAwB,CAACG,OAAO,CAACM,MAAM,EAAEnB,IAAI,CAAC;MACjE,MAAMoB,SAAS,GAAGV,wBAAwB,CAACG,OAAO,CAACQ,KAAK,EAAErB,IAAI,CAAC;MAC/D,MAAMsB,WAAW,GAAGJ,UAAU,GAAG,CAAC;MAClC,MAAMK,UAAU,GAAGH,SAAS,GAAG,CAAC;MAChC,MAAMI,gBAAgB,GAAGb,OAAO,CAACE,OAAO,CAACM,MAAM,EAAEN,OAAO,CAACQ,KAAK,CAAC;MAC/D,IAAIG,gBAAgB,EAAE;QACpB,OAAOD,UAAU,IAAID,WAAW;MAClC,CAAC,MAAM;QACL,OAAOA,WAAW,IAAIC,UAAU;MAClC;IACF;IACA,IAAI9B,eAAe,CAACoB,OAAO,CAAC,EAAE;MAC5B,OAAOH,wBAAwB,CAACV,IAAI,EAAEa,OAAO,CAACQ,KAAK,CAAC,GAAG,CAAC;IAC1D;IACA,IAAI3B,gBAAgB,CAACmB,OAAO,CAAC,EAAE;MAC7B,OAAOH,wBAAwB,CAACG,OAAO,CAACM,MAAM,EAAEnB,IAAI,CAAC,GAAG,CAAC;IAC3D;IACA,IAAI,OAAOa,OAAO,KAAK,UAAU,EAAE;MACjC,OAAOA,OAAO,CAACb,IAAI,CAAC;IACtB;IACA,OAAO,KAAK;EACd,CAAC,CAAC;AACJ;AAEA;;;;AAIA,OAAO,MAAMyB,OAAO,GAAG1B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}