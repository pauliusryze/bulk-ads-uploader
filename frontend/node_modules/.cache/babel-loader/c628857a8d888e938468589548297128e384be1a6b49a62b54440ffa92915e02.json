{"ast":null,"code":"/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */\nexport var UI;\n(function (UI) {\n  /** The root component displaying the months and the navigation bar. */\n  UI[\"Root\"] = \"root\";\n  /** The Chevron SVG element used by navigation buttons and dropdowns. */\n  UI[\"Chevron\"] = \"chevron\";\n  /**\n   * The grid cell with the day's date. Extended by {@link DayFlag} and\n   * {@link SelectionState}.\n   */\n  UI[\"Day\"] = \"day\";\n  /** The button containing the formatted day's date, inside the grid cell. */\n  UI[\"DayButton\"] = \"day_button\";\n  /** The caption label of the month (when not showing the dropdown navigation). */\n  UI[\"CaptionLabel\"] = \"caption_label\";\n  /** The container of the dropdown navigation (when enabled). */\n  UI[\"Dropdowns\"] = \"dropdowns\";\n  /** The dropdown element to select for years and months. */\n  UI[\"Dropdown\"] = \"dropdown\";\n  /** The container element of the dropdown. */\n  UI[\"DropdownRoot\"] = \"dropdown_root\";\n  /** The root element of the footer. */\n  UI[\"Footer\"] = \"footer\";\n  /** The month grid. */\n  UI[\"MonthGrid\"] = \"month_grid\";\n  /** Contains the dropdown navigation or the caption label. */\n  UI[\"MonthCaption\"] = \"month_caption\";\n  /** The dropdown with the months. */\n  UI[\"MonthsDropdown\"] = \"months_dropdown\";\n  /** Wrapper of the month grid. */\n  UI[\"Month\"] = \"month\";\n  /** The container of the displayed months. */\n  UI[\"Months\"] = \"months\";\n  /** The navigation bar with the previous and next buttons. */\n  UI[\"Nav\"] = \"nav\";\n  /**\n   * The next month button in the navigation. *\n   *\n   * @since 9.1.0\n   */\n  UI[\"NextMonthButton\"] = \"button_next\";\n  /**\n   * The previous month button in the navigation.\n   *\n   * @since 9.1.0\n   */\n  UI[\"PreviousMonthButton\"] = \"button_previous\";\n  /** The row containing the week. */\n  UI[\"Week\"] = \"week\";\n  /** The group of row weeks in a month (`tbody`). */\n  UI[\"Weeks\"] = \"weeks\";\n  /** The column header with the weekday. */\n  UI[\"Weekday\"] = \"weekday\";\n  /** The row grouping the weekdays in the column headers. */\n  UI[\"Weekdays\"] = \"weekdays\";\n  /** The cell containing the week number. */\n  UI[\"WeekNumber\"] = \"week_number\";\n  /** The cell header of the week numbers column. */\n  UI[\"WeekNumberHeader\"] = \"week_number_header\";\n  /** The dropdown with the years. */\n  UI[\"YearsDropdown\"] = \"years_dropdown\";\n})(UI || (UI = {}));\n/** Enum representing flags for the {@link UI.Day} element. */\nexport var DayFlag;\n(function (DayFlag) {\n  /** The day is disabled. */\n  DayFlag[\"disabled\"] = \"disabled\";\n  /** The day is hidden. */\n  DayFlag[\"hidden\"] = \"hidden\";\n  /** The day is outside the current month. */\n  DayFlag[\"outside\"] = \"outside\";\n  /** The day is focused. */\n  DayFlag[\"focused\"] = \"focused\";\n  /** The day is today. */\n  DayFlag[\"today\"] = \"today\";\n})(DayFlag || (DayFlag = {}));\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */\nexport var SelectionState;\n(function (SelectionState) {\n  /** The day is at the end of a selected range. */\n  SelectionState[\"range_end\"] = \"range_end\";\n  /** The day is at the middle of a selected range. */\n  SelectionState[\"range_middle\"] = \"range_middle\";\n  /** The day is at the start of a selected range. */\n  SelectionState[\"range_start\"] = \"range_start\";\n  /** The day is selected. */\n  SelectionState[\"selected\"] = \"selected\";\n})(SelectionState || (SelectionState = {}));\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */\nexport var Animation;\n(function (Animation) {\n  /** The entering weeks when they appear before the exiting month. */\n  Animation[\"weeks_before_enter\"] = \"weeks_before_enter\";\n  /** The exiting weeks when they disappear before the entering month. */\n  Animation[\"weeks_before_exit\"] = \"weeks_before_exit\";\n  /** The entering weeks when they appear after the exiting month. */\n  Animation[\"weeks_after_enter\"] = \"weeks_after_enter\";\n  /** The exiting weeks when they disappear after the entering month. */\n  Animation[\"weeks_after_exit\"] = \"weeks_after_exit\";\n  /** The entering caption when it appears after the exiting month. */\n  Animation[\"caption_after_enter\"] = \"caption_after_enter\";\n  /** The exiting caption when it disappears after the entering month. */\n  Animation[\"caption_after_exit\"] = \"caption_after_exit\";\n  /** The entering caption when it appears before the exiting month. */\n  Animation[\"caption_before_enter\"] = \"caption_before_enter\";\n  /** The exiting caption when it disappears before the entering month. */\n  Animation[\"caption_before_exit\"] = \"caption_before_exit\";\n})(Animation || (Animation = {}));","map":{"version":3,"names":["UI","DayFlag","SelectionState","Animation"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/UI.ts"],"sourcesContent":["import { CSSProperties } from \"react\";\n\nimport type { CustomComponents, ClassNames, Styles } from \"./types/index.js\";\n\n/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */\nexport enum UI {\n  /** The root component displaying the months and the navigation bar. */\n  Root = \"root\",\n  /** The Chevron SVG element used by navigation buttons and dropdowns. */\n  Chevron = \"chevron\",\n  /**\n   * The grid cell with the day's date. Extended by {@link DayFlag} and\n   * {@link SelectionState}.\n   */\n  Day = \"day\",\n  /** The button containing the formatted day's date, inside the grid cell. */\n  DayButton = \"day_button\",\n  /** The caption label of the month (when not showing the dropdown navigation). */\n  CaptionLabel = \"caption_label\",\n  /** The container of the dropdown navigation (when enabled). */\n  Dropdowns = \"dropdowns\",\n  /** The dropdown element to select for years and months. */\n  Dropdown = \"dropdown\",\n  /** The container element of the dropdown. */\n  DropdownRoot = \"dropdown_root\",\n  /** The root element of the footer. */\n  Footer = \"footer\",\n  /** The month grid. */\n  MonthGrid = \"month_grid\",\n  /** Contains the dropdown navigation or the caption label. */\n  MonthCaption = \"month_caption\",\n  /** The dropdown with the months. */\n  MonthsDropdown = \"months_dropdown\",\n  /** Wrapper of the month grid. */\n  Month = \"month\",\n  /** The container of the displayed months. */\n  Months = \"months\",\n  /** The navigation bar with the previous and next buttons. */\n  Nav = \"nav\",\n  /**\n   * The next month button in the navigation. *\n   *\n   * @since 9.1.0\n   */\n  NextMonthButton = \"button_next\",\n  /**\n   * The previous month button in the navigation.\n   *\n   * @since 9.1.0\n   */\n  PreviousMonthButton = \"button_previous\",\n  /** The row containing the week. */\n  Week = \"week\",\n  /** The group of row weeks in a month (`tbody`). */\n  Weeks = \"weeks\",\n  /** The column header with the weekday. */\n  Weekday = \"weekday\",\n  /** The row grouping the weekdays in the column headers. */\n  Weekdays = \"weekdays\",\n  /** The cell containing the week number. */\n  WeekNumber = \"week_number\",\n  /** The cell header of the week numbers column. */\n  WeekNumberHeader = \"week_number_header\",\n  /** The dropdown with the years. */\n  YearsDropdown = \"years_dropdown\"\n}\n\n/** Enum representing flags for the {@link UI.Day} element. */\nexport enum DayFlag {\n  /** The day is disabled. */\n  disabled = \"disabled\",\n  /** The day is hidden. */\n  hidden = \"hidden\",\n  /** The day is outside the current month. */\n  outside = \"outside\",\n  /** The day is focused. */\n  focused = \"focused\",\n  /** The day is today. */\n  today = \"today\"\n}\n\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */\nexport enum SelectionState {\n  /** The day is at the end of a selected range. */\n  range_end = \"range_end\",\n  /** The day is at the middle of a selected range. */\n  range_middle = \"range_middle\",\n  /** The day is at the start of a selected range. */\n  range_start = \"range_start\",\n  /** The day is selected. */\n  selected = \"selected\"\n}\n\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */\nexport enum Animation {\n  /** The entering weeks when they appear before the exiting month. */\n  weeks_before_enter = \"weeks_before_enter\",\n  /** The exiting weeks when they disappear before the entering month. */\n  weeks_before_exit = \"weeks_before_exit\",\n  /** The entering weeks when they appear after the exiting month. */\n  weeks_after_enter = \"weeks_after_enter\",\n  /** The exiting weeks when they disappear after the entering month. */\n  weeks_after_exit = \"weeks_after_exit\",\n  /** The entering caption when it appears after the exiting month. */\n  caption_after_enter = \"caption_after_enter\",\n  /** The exiting caption when it disappears after the entering month. */\n  caption_after_exit = \"caption_after_exit\",\n  /** The entering caption when it appears before the exiting month. */\n  caption_before_enter = \"caption_before_enter\",\n  /** The exiting caption when it disappears before the entering month. */\n  caption_before_exit = \"caption_before_exit\"\n}\n\n/**\n * Deprecated UI elements and flags from previous versions of DayPicker.\n *\n * These elements are kept for backward compatibility and to assist in\n * transitioning to the new {@link UI} elements.\n *\n * @deprecated\n * @since 9.0.1\n * @template T - The type of the deprecated UI element (e.g., CSS class or\n *   style).\n * @see https://daypicker.dev/upgrading\n * @see https://daypicker.dev/docs/styling\n */\nexport type DeprecatedUI<T extends CSSProperties | string> = {\n  /**\n   * This element was applied to the style of any button in DayPicker and it is\n   * replaced by {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  button: T;\n  /**\n   * This element was resetting the style of any button in DayPicker and it is\n   * replaced by {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  button_reset: T;\n  /**\n   * This element has been renamed to {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption: T;\n  /**\n   * This element has been removed. Captions are styled via\n   * {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption_between: T;\n  /**\n   * This element has been renamed to {@link UI.Dropdowns}.\n   *\n   * @deprecated\n   */\n  caption_dropdowns: T;\n  /**\n   * This element has been removed. Captions are styled via\n   * {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption_end: T;\n  /**\n   * This element has been removed.\n   *\n   * @deprecated\n   */\n  caption_start: T;\n  /**\n   * This element has been renamed to {@link UI.Day}.\n   *\n   * @deprecated\n   */\n  cell: T;\n  /**\n   * This element has been renamed to {@link DayFlag.disabled}.\n   *\n   * @deprecated\n   */\n  day_disabled: T;\n  /**\n   * This element has been renamed to {@link DayFlag.hidden}.\n   *\n   * @deprecated\n   */\n  day_hidden: T;\n  /**\n   * This element has been renamed to {@link DayFlag.outside}.\n   *\n   * @deprecated\n   */\n  day_outside: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_end}.\n   *\n   * @deprecated\n   */\n  day_range_end: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_middle}.\n   *\n   * @deprecated\n   */\n  day_range_middle: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_start}.\n   *\n   * @deprecated\n   */\n  day_range_start: T;\n  /**\n   * This element has been renamed to {@link SelectionState.selected}.\n   *\n   * @deprecated\n   */\n  day_selected: T;\n  /**\n   * This element has been renamed to {@link DayFlag.today}.\n   *\n   * @deprecated\n   */\n  day_today: T;\n  /**\n   * This element has been removed. The dropdown icon is now {@link UI.Chevron}\n   * inside a {@link UI.CaptionLabel}.\n   *\n   * @deprecated\n   */\n  dropdown_icon: T;\n  /**\n   * This element has been renamed to {@link UI.MonthsDropdown}.\n   *\n   * @deprecated\n   */\n  dropdown_month: T;\n  /**\n   * This element has been renamed to {@link UI.YearsDropdown}.\n   *\n   * @deprecated\n   */\n  dropdown_year: T;\n  /**\n   * This element has been removed.\n   *\n   * @deprecated\n   */\n  head: T;\n  /**\n   * This element has been renamed to {@link UI.Weekday}.\n   *\n   * @deprecated\n   */\n  head_cell: T;\n  /**\n   * This element has been renamed to {@link UI.Weekdays}.\n   *\n   * @deprecated\n   */\n  head_row: T;\n  /**\n   * This flag has been removed. Use `data-multiple-months` in your CSS\n   * selectors.\n   *\n   * @deprecated\n   */\n  multiple_months: T;\n  /**\n   * This element has been removed. To style the navigation buttons, use\n   * {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button: T;\n  /**\n   * This element has been renamed to {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button_next: T;\n  /**\n   * This element has been renamed to {@link UI.PreviousMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button_previous: T;\n  /**\n   * This element has been removed. The dropdown icon is now {@link UI.Chevron}\n   * inside a {@link UI.NextMonthButton} or a {@link UI.PreviousMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_icon: T;\n  /**\n   * This element has been renamed to {@link UI.Week}.\n   *\n   * @deprecated\n   */\n  row: T;\n  /**\n   * This element has been renamed to {@link UI.MonthGrid}.\n   *\n   * @deprecated\n   */\n  table: T;\n  /**\n   * This element has been renamed to {@link UI.Weeks}.\n   *\n   * @deprecated\n   */\n  tbody: T;\n  /**\n   * This element has been removed. The {@link UI.Footer} is now a single element\n   * below the months.\n   *\n   * @deprecated\n   */\n  tfoot: T;\n  /**\n   * This flag has been removed. There are no \"visually hidden\" elements in\n   * DayPicker 9.\n   *\n   * @deprecated\n   */\n  vhidden: T;\n  /**\n   * This element has been renamed. Use {@link UI.WeekNumber} instead.\n   *\n   * @deprecated\n   */\n  weeknumber: T;\n  /**\n   * This flag has been removed. Use `data-week-numbers` in your CSS.\n   *\n   * @deprecated\n   */\n  with_weeknumber: T;\n};\n"],"mappings":"AAIA;;;;;;AAMA,WAAYA,EA4DX;AA5DD,WAAYA,EAAE;EACZ;EACAA,EAAA,iBAAa;EACb;EACAA,EAAA,uBAAmB;EACnB;;;;EAIAA,EAAA,eAAW;EACX;EACAA,EAAA,4BAAwB;EACxB;EACAA,EAAA,kCAA8B;EAC9B;EACAA,EAAA,2BAAuB;EACvB;EACAA,EAAA,yBAAqB;EACrB;EACAA,EAAA,kCAA8B;EAC9B;EACAA,EAAA,qBAAiB;EACjB;EACAA,EAAA,4BAAwB;EACxB;EACAA,EAAA,kCAA8B;EAC9B;EACAA,EAAA,sCAAkC;EAClC;EACAA,EAAA,mBAAe;EACf;EACAA,EAAA,qBAAiB;EACjB;EACAA,EAAA,eAAW;EACX;;;;;EAKAA,EAAA,mCAA+B;EAC/B;;;;;EAKAA,EAAA,2CAAuC;EACvC;EACAA,EAAA,iBAAa;EACb;EACAA,EAAA,mBAAe;EACf;EACAA,EAAA,uBAAmB;EACnB;EACAA,EAAA,yBAAqB;EACrB;EACAA,EAAA,8BAA0B;EAC1B;EACAA,EAAA,2CAAuC;EACvC;EACAA,EAAA,oCAAgC;AAClC,CAAC,EA5DWA,EAAE,KAAFA,EAAE;AA8Dd;AACA,WAAYC,OAWX;AAXD,WAAYA,OAAO;EACjB;EACAA,OAAA,yBAAqB;EACrB;EACAA,OAAA,qBAAiB;EACjB;EACAA,OAAA,uBAAmB;EACnB;EACAA,OAAA,uBAAmB;EACnB;EACAA,OAAA,mBAAe;AACjB,CAAC,EAXWA,OAAO,KAAPA,OAAO;AAanB;;;;AAIA,WAAYC,cASX;AATD,WAAYA,cAAc;EACxB;EACAA,cAAA,2BAAuB;EACvB;EACAA,cAAA,iCAA6B;EAC7B;EACAA,cAAA,+BAA2B;EAC3B;EACAA,cAAA,yBAAqB;AACvB,CAAC,EATWA,cAAc,KAAdA,cAAc;AAW1B;;;;AAIA,WAAYC,SAiBX;AAjBD,WAAYA,SAAS;EACnB;EACAA,SAAA,6CAAyC;EACzC;EACAA,SAAA,2CAAuC;EACvC;EACAA,SAAA,2CAAuC;EACvC;EACAA,SAAA,yCAAqC;EACrC;EACAA,SAAA,+CAA2C;EAC3C;EACAA,SAAA,6CAAyC;EACzC;EACAA,SAAA,iDAA6C;EAC7C;EACAA,SAAA,+CAA2C;AAC7C,CAAC,EAjBWA,SAAS,KAATA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}