{"ast":null,"code":"/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, navStart, navEnd, dateLib) {\n  const {\n    month,\n    defaultMonth,\n    today = dateLib.today(),\n    numberOfMonths = 1\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const {\n    differenceInCalendarMonths,\n    addMonths,\n    startOfMonth\n  } = dateLib;\n  if (navEnd && differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(navEnd, offset);\n  }\n  if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n    initialMonth = navStart;\n  }\n  return startOfMonth(initialMonth);\n}","map":{"version":3,"names":["getInitialMonth","props","navStart","navEnd","dateLib","month","defaultMonth","today","numberOfMonths","initialMonth","differenceInCalendarMonths","addMonths","startOfMonth","offset"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/getInitialMonth.ts"],"sourcesContent":["import { type DateLib } from \"../classes/DateLib.js\";\nimport { type DayPickerProps } from \"../types/props.js\";\n\n/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(\n  props: Pick<\n    DayPickerProps,\n    | \"fromYear\"\n    | \"toYear\"\n    | \"month\"\n    | \"defaultMonth\"\n    | \"today\"\n    | \"numberOfMonths\"\n    | \"timeZone\"\n  >,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  dateLib: DateLib\n): Date {\n  const {\n    month,\n    defaultMonth,\n    today = dateLib.today(),\n    numberOfMonths = 1\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n\n  if (\n    navEnd &&\n    differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1\n  ) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(navEnd, offset);\n  }\n\n  if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n    initialMonth = navStart;\n  }\n\n  return startOfMonth(initialMonth);\n}\n"],"mappings":"AAGA;;;;;;;;;;;AAWA,OAAM,SAAUA,eAAeA,CAC7BC,KASC,EACDC,QAA0B,EAC1BC,MAAwB,EACxBC,OAAgB;EAEhB,MAAM;IACJC,KAAK;IACLC,YAAY;IACZC,KAAK,GAAGH,OAAO,CAACG,KAAK,EAAE;IACvBC,cAAc,GAAG;EAAC,CACnB,GAAGP,KAAK;EACT,IAAIQ,YAAY,GAAGJ,KAAK,IAAIC,YAAY,IAAIC,KAAK;EACjD,MAAM;IAAEG,0BAA0B;IAAEC,SAAS;IAAEC;EAAY,CAAE,GAAGR,OAAO;EAEvE,IACED,MAAM,IACNO,0BAA0B,CAACP,MAAM,EAAEM,YAAY,CAAC,GAAGD,cAAc,GAAG,CAAC,EACrE;IACA,MAAMK,MAAM,GAAG,CAAC,CAAC,IAAIL,cAAc,GAAG,CAAC,CAAC;IACxCC,YAAY,GAAGE,SAAS,CAACR,MAAM,EAAEU,MAAM,CAAC;EAC1C;EAEA,IAAIX,QAAQ,IAAIQ,0BAA0B,CAACD,YAAY,EAAEP,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtEO,YAAY,GAAGP,QAAQ;EACzB;EAEA,OAAOU,YAAY,CAACH,YAAY,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}