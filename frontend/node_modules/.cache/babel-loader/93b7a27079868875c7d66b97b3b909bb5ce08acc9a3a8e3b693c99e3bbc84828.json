{"ast":null,"code":"import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nexport function useSingle(props, dateLib) {\n  const {\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props;\n  const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n  const selected = !onSelect ? internallySelected : initiallySelected;\n  const {\n    isSameDay\n  } = dateLib;\n  const isSelected = compareDate => {\n    return selected ? isSameDay(selected, compareDate) : false;\n  };\n  const select = (triggerDate, modifiers, e) => {\n    let newDate = triggerDate;\n    if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n      // If the date is the same, clear the selection.\n      newDate = undefined;\n    }\n    if (!onSelect) {\n      setSelected(newDate);\n    }\n    if (required) {\n      onSelect?.(newDate, triggerDate, modifiers, e);\n    } else {\n      onSelect?.(newDate, triggerDate, modifiers, e);\n    }\n    return newDate;\n  };\n  return {\n    selected,\n    select,\n    isSelected\n  };\n}","map":{"version":3,"names":["useControlledValue","useSingle","props","dateLib","selected","initiallySelected","required","onSelect","internallySelected","setSelected","undefined","isSameDay","isSelected","compareDate","select","triggerDate","modifiers","e","newDate"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/selection/useSingle.tsx"],"sourcesContent":["import React from \"react\";\n\nimport type { DateLib } from \"../classes/DateLib.js\";\nimport { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport type {\n  DayPickerProps,\n  Modifiers,\n  PropsSingle,\n  SelectHandler,\n  SelectedValue,\n  Selection\n} from \"../types/index.js\";\n\nexport type UseSingle<T extends DayPickerProps> = {\n  select: SelectHandler<T>;\n  isSelected: (date: Date) => boolean;\n  selected: SelectedValue<T>;\n};\n\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nexport function useSingle<T extends DayPickerProps>(\n  props: DayPickerProps,\n  dateLib: DateLib\n): Selection<T> {\n  const {\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props as PropsSingle;\n\n  const [internallySelected, setSelected] = useControlledValue(\n    initiallySelected,\n    onSelect ? initiallySelected : undefined\n  );\n\n  const selected = !onSelect ? internallySelected : initiallySelected;\n\n  const { isSameDay } = dateLib;\n\n  const isSelected = (compareDate: Date) => {\n    return selected ? isSameDay(selected, compareDate) : false;\n  };\n\n  const select = (\n    triggerDate: Date,\n    modifiers: Modifiers,\n    e: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    let newDate: Date | undefined = triggerDate;\n    if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n      // If the date is the same, clear the selection.\n      newDate = undefined;\n    }\n    if (!onSelect) {\n      setSelected(newDate);\n    }\n    if (required) {\n      onSelect?.(newDate as Date, triggerDate, modifiers, e);\n    } else {\n      onSelect?.(newDate, triggerDate, modifiers, e);\n    }\n    return newDate;\n  };\n\n  return {\n    selected,\n    select,\n    isSelected\n  } as Selection<T>;\n}\n"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,kCAAkC;AAgBrE;;;;;;;;;AASA,OAAM,SAAUC,SAASA,CACvBC,KAAqB,EACrBC,OAAgB;EAEhB,MAAM;IACJC,QAAQ,EAAEC,iBAAiB;IAC3BC,QAAQ;IACRC;EAAQ,CACT,GAAGL,KAAoB;EAExB,MAAM,CAACM,kBAAkB,EAAEC,WAAW,CAAC,GAAGT,kBAAkB,CAC1DK,iBAAiB,EACjBE,QAAQ,GAAGF,iBAAiB,GAAGK,SAAS,CACzC;EAED,MAAMN,QAAQ,GAAG,CAACG,QAAQ,GAAGC,kBAAkB,GAAGH,iBAAiB;EAEnE,MAAM;IAAEM;EAAS,CAAE,GAAGR,OAAO;EAE7B,MAAMS,UAAU,GAAIC,WAAiB,IAAI;IACvC,OAAOT,QAAQ,GAAGO,SAAS,CAACP,QAAQ,EAAES,WAAW,CAAC,GAAG,KAAK;EAC5D,CAAC;EAED,MAAMC,MAAM,GAAGA,CACbC,WAAiB,EACjBC,SAAoB,EACpBC,CAAyC,KACvC;IACF,IAAIC,OAAO,GAAqBH,WAAW;IAC3C,IAAI,CAACT,QAAQ,IAAIF,QAAQ,IAAIA,QAAQ,IAAIO,SAAS,CAACI,WAAW,EAAEX,QAAQ,CAAC,EAAE;MACzE;MACAc,OAAO,GAAGR,SAAS;IACrB;IACA,IAAI,CAACH,QAAQ,EAAE;MACbE,WAAW,CAACS,OAAO,CAAC;IACtB;IACA,IAAIZ,QAAQ,EAAE;MACZC,QAAQ,GAAGW,OAAe,EAAEH,WAAW,EAAEC,SAAS,EAAEC,CAAC,CAAC;IACxD,CAAC,MAAM;MACLV,QAAQ,GAAGW,OAAO,EAAEH,WAAW,EAAEC,SAAS,EAAEC,CAAC,CAAC;IAChD;IACA,OAAOC,OAAO;EAChB,CAAC;EAED,OAAO;IACLd,QAAQ;IACRU,MAAM;IACNF;GACe;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}