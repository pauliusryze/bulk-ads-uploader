{"ast":null,"code":"import { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */\nexport function useSelection(props, dateLib) {\n  const single = useSingle(props, dateLib);\n  const multi = useMulti(props, dateLib);\n  const range = useRange(props, dateLib);\n  switch (props.mode) {\n    case \"single\":\n      return single;\n    case \"multiple\":\n      return multi;\n    case \"range\":\n      return range;\n    default:\n      return undefined;\n  }\n}","map":{"version":3,"names":["useMulti","useRange","useSingle","useSelection","props","dateLib","single","multi","range","mode","undefined"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/useSelection.ts"],"sourcesContent":["import { type DateLib } from \"./classes/DateLib.js\";\nimport { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\nimport type { DayPickerProps } from \"./types/index.js\";\nimport { Selection } from \"./types/selection.js\";\n\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */\nexport function useSelection<T extends DayPickerProps>(\n  props: T,\n  dateLib: DateLib\n): Selection<T> | undefined {\n  const single = useSingle(props, dateLib);\n  const multi = useMulti(props, dateLib);\n  const range = useRange(props, dateLib);\n\n  switch (props.mode) {\n    case \"single\":\n      return single;\n    case \"multiple\":\n      return multi;\n    case \"range\":\n      return range;\n    default:\n      return undefined;\n  }\n}\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,SAAS,QAAQ,0BAA0B;AAIpD;;;;;;;;;;AAUA,OAAM,SAAUC,YAAYA,CAC1BC,KAAQ,EACRC,OAAgB;EAEhB,MAAMC,MAAM,GAAGJ,SAAS,CAACE,KAAK,EAAEC,OAAO,CAAC;EACxC,MAAME,KAAK,GAAGP,QAAQ,CAACI,KAAK,EAAEC,OAAO,CAAC;EACtC,MAAMG,KAAK,GAAGP,QAAQ,CAACG,KAAK,EAAEC,OAAO,CAAC;EAEtC,QAAQD,KAAK,CAACK,IAAI;IAChB,KAAK,QAAQ;MACX,OAAOH,MAAM;IACf,KAAK,UAAU;MACb,OAAOC,KAAK;IACd,KAAK,OAAO;MACV,OAAOC,KAAK;IACd;MACE,OAAOE,SAAS;EACpB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}