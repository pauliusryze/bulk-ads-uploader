{"ast":null,"code":"/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */\nexport function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n  const {\n    startOfMonth,\n    startOfYear,\n    endOfYear,\n    eachMonthOfInterval,\n    getMonth\n  } = dateLib;\n  const months = eachMonthOfInterval({\n    start: startOfYear(displayMonth),\n    end: endOfYear(displayMonth)\n  });\n  const options = months.map(month => {\n    const label = formatters.formatMonthDropdown(month, dateLib);\n    const value = getMonth(month);\n    const disabled = navStart && month < startOfMonth(navStart) || navEnd && month > startOfMonth(navEnd) || false;\n    return {\n      value,\n      label,\n      disabled\n    };\n  });\n  return options;\n}","map":{"version":3,"names":["getMonthOptions","displayMonth","navStart","navEnd","formatters","dateLib","startOfMonth","startOfYear","endOfYear","eachMonthOfInterval","getMonth","months","start","end","options","map","month","label","formatMonthDropdown","value","disabled"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/getMonthOptions.ts"],"sourcesContent":["import { type DateLib } from \"../classes/DateLib.js\";\nimport { DropdownOption } from \"../components/Dropdown.js\";\nimport type { Formatters } from \"../types/index.js\";\n\n/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */\nexport function getMonthOptions(\n  displayMonth: Date,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  formatters: Pick<Formatters, \"formatMonthDropdown\">,\n  dateLib: DateLib\n): DropdownOption[] | undefined {\n  const {\n    startOfMonth,\n    startOfYear,\n    endOfYear,\n    eachMonthOfInterval,\n    getMonth\n  } = dateLib;\n\n  const months = eachMonthOfInterval({\n    start: startOfYear(displayMonth),\n    end: endOfYear(displayMonth)\n  });\n\n  const options = months.map((month) => {\n    const label = formatters.formatMonthDropdown(month, dateLib);\n    const value = getMonth(month);\n    const disabled =\n      (navStart && month < startOfMonth(navStart)) ||\n      (navEnd && month > startOfMonth(navEnd)) ||\n      false;\n    return { value, label, disabled };\n  });\n\n  return options;\n}\n"],"mappings":"AAIA;;;;;;;;;;;;;;;AAeA,OAAM,SAAUA,eAAeA,CAC7BC,YAAkB,EAClBC,QAA0B,EAC1BC,MAAwB,EACxBC,UAAmD,EACnDC,OAAgB;EAEhB,MAAM;IACJC,YAAY;IACZC,WAAW;IACXC,SAAS;IACTC,mBAAmB;IACnBC;EAAQ,CACT,GAAGL,OAAO;EAEX,MAAMM,MAAM,GAAGF,mBAAmB,CAAC;IACjCG,KAAK,EAAEL,WAAW,CAACN,YAAY,CAAC;IAChCY,GAAG,EAAEL,SAAS,CAACP,YAAY;GAC5B,CAAC;EAEF,MAAMa,OAAO,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAI;IACnC,MAAMC,KAAK,GAAGb,UAAU,CAACc,mBAAmB,CAACF,KAAK,EAAEX,OAAO,CAAC;IAC5D,MAAMc,KAAK,GAAGT,QAAQ,CAACM,KAAK,CAAC;IAC7B,MAAMI,QAAQ,GACXlB,QAAQ,IAAIc,KAAK,GAAGV,YAAY,CAACJ,QAAQ,CAAC,IAC1CC,MAAM,IAAIa,KAAK,GAAGV,YAAY,CAACH,MAAM,CAAE,IACxC,KAAK;IACP,OAAO;MAAEgB,KAAK;MAAEF,KAAK;MAAEG;IAAQ,CAAE;EACnC,CAAC,CAAC;EAEF,OAAON,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}