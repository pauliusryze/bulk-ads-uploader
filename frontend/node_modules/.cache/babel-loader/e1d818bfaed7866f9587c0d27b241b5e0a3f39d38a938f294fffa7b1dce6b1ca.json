{"ast":null,"code":"/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */\nexport function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {\n  const today = dateLib.today();\n  const start = broadcastCalendar ? dateLib.startOfBroadcastWeek(today, dateLib) : ISOWeek ? dateLib.startOfISOWeek(today) : dateLib.startOfWeek(today);\n  const days = [];\n  for (let i = 0; i < 7; i++) {\n    const day = dateLib.addDays(start, i);\n    days.push(day);\n  }\n  return days;\n}","map":{"version":3,"names":["getWeekdays","dateLib","ISOWeek","broadcastCalendar","today","start","startOfBroadcastWeek","startOfISOWeek","startOfWeek","days","i","day","addDays","push"],"sources":["/Users/paulius/Downloads/Projects/Meta Ads Uploader/frontend/node_modules/react-day-picker/src/helpers/getWeekdays.ts"],"sourcesContent":["import { DateLib } from \"../classes/DateLib.js\";\n\n/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */\nexport function getWeekdays(\n  dateLib: DateLib,\n  ISOWeek?: boolean | undefined,\n  broadcastCalendar?: boolean | undefined\n): Date[] {\n  const today = dateLib.today();\n\n  const start = broadcastCalendar\n    ? dateLib.startOfBroadcastWeek(today, dateLib)\n    : ISOWeek\n      ? dateLib.startOfISOWeek(today)\n      : dateLib.startOfWeek(today);\n\n  const days: Date[] = [];\n  for (let i = 0; i < 7; i++) {\n    const day = dateLib.addDays(start, i);\n    days.push(day);\n  }\n  return days;\n}\n"],"mappings":"AAEA;;;;;;;;;;AAUA,OAAM,SAAUA,WAAWA,CACzBC,OAAgB,EAChBC,OAA6B,EAC7BC,iBAAuC;EAEvC,MAAMC,KAAK,GAAGH,OAAO,CAACG,KAAK,EAAE;EAE7B,MAAMC,KAAK,GAAGF,iBAAiB,GAC3BF,OAAO,CAACK,oBAAoB,CAACF,KAAK,EAAEH,OAAO,CAAC,GAC5CC,OAAO,GACLD,OAAO,CAACM,cAAc,CAACH,KAAK,CAAC,GAC7BH,OAAO,CAACO,WAAW,CAACJ,KAAK,CAAC;EAEhC,MAAMK,IAAI,GAAW,EAAE;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMC,GAAG,GAAGV,OAAO,CAACW,OAAO,CAACP,KAAK,EAAEK,CAAC,CAAC;IACrCD,IAAI,CAACI,IAAI,CAACF,GAAG,CAAC;EAChB;EACA,OAAOF,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}